// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_aes_mixColumns_HH_
#define _a0_aes_mixColumns_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct a0_aes_mixColumns : public sc_module {
    // Port declarations 52
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_buf_r_AWVALID;
    sc_in< sc_logic > m_axi_buf_r_AWREADY;
    sc_out< sc_lv<32> > m_axi_buf_r_AWADDR;
    sc_out< sc_lv<1> > m_axi_buf_r_AWID;
    sc_out< sc_lv<32> > m_axi_buf_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_buf_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_buf_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_buf_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_buf_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_buf_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_buf_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_buf_r_AWREGION;
    sc_out< sc_lv<1> > m_axi_buf_r_AWUSER;
    sc_out< sc_logic > m_axi_buf_r_WVALID;
    sc_in< sc_logic > m_axi_buf_r_WREADY;
    sc_out< sc_lv<8> > m_axi_buf_r_WDATA;
    sc_out< sc_lv<1> > m_axi_buf_r_WSTRB;
    sc_out< sc_logic > m_axi_buf_r_WLAST;
    sc_out< sc_lv<1> > m_axi_buf_r_WID;
    sc_out< sc_lv<1> > m_axi_buf_r_WUSER;
    sc_out< sc_logic > m_axi_buf_r_ARVALID;
    sc_in< sc_logic > m_axi_buf_r_ARREADY;
    sc_out< sc_lv<32> > m_axi_buf_r_ARADDR;
    sc_out< sc_lv<1> > m_axi_buf_r_ARID;
    sc_out< sc_lv<32> > m_axi_buf_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_buf_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_buf_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_buf_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_buf_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_buf_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_buf_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_buf_r_ARREGION;
    sc_out< sc_lv<1> > m_axi_buf_r_ARUSER;
    sc_in< sc_logic > m_axi_buf_r_RVALID;
    sc_out< sc_logic > m_axi_buf_r_RREADY;
    sc_in< sc_lv<8> > m_axi_buf_r_RDATA;
    sc_in< sc_logic > m_axi_buf_r_RLAST;
    sc_in< sc_lv<1> > m_axi_buf_r_RID;
    sc_in< sc_lv<1> > m_axi_buf_r_RUSER;
    sc_in< sc_lv<2> > m_axi_buf_r_RRESP;
    sc_in< sc_logic > m_axi_buf_r_BVALID;
    sc_out< sc_logic > m_axi_buf_r_BREADY;
    sc_in< sc_lv<2> > m_axi_buf_r_BRESP;
    sc_in< sc_lv<1> > m_axi_buf_r_BID;
    sc_in< sc_lv<1> > m_axi_buf_r_BUSER;
    sc_in< sc_lv<32> > buf_offset;


    // Module declarations
    a0_aes_mixColumns(sc_module_name name);
    SC_HAS_PROCESS(a0_aes_mixColumns);

    ~a0_aes_mixColumns();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<26> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > buf_r_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > buf_r_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > buf_r_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > buf_r_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > buf_r_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_lv<32> > buf_addr_reg_450;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_169_p3;
    sc_signal< sc_lv<32> > buf_addr_12_reg_457;
    sc_signal< sc_lv<32> > buf_addr_13_reg_464;
    sc_signal< sc_lv<32> > buf_addr_14_reg_471;
    sc_signal< sc_lv<5> > i_3_fu_259_p2;
    sc_signal< sc_lv<5> > i_3_reg_478;
    sc_signal< sc_lv<8> > a_reg_483;
    sc_signal< sc_lv<8> > b_reg_490;
    sc_signal< sc_lv<8> > c_reg_497;
    sc_signal< sc_lv<8> > d_reg_505;
    sc_signal< sc_lv<8> > x_assign_fu_265_p2;
    sc_signal< sc_lv<8> > x_assign_reg_512;
    sc_signal< sc_lv<8> > tmp_9_fu_310_p2;
    sc_signal< sc_lv<8> > tmp_9_reg_519;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_buf_r_AWREADY;
    sc_signal< sc_lv<8> > tmp_5_fu_353_p2;
    sc_signal< sc_lv<8> > tmp_5_reg_524;
    sc_signal< sc_lv<8> > tmp_1_fu_396_p2;
    sc_signal< sc_lv<8> > tmp_1_reg_529;
    sc_signal< sc_lv<8> > tmp_7_fu_433_p2;
    sc_signal< sc_lv<8> > tmp_7_reg_534;
    sc_signal< sc_lv<5> > i_reg_158;
    sc_signal< sc_lv<32> > sum_fu_185_p2;
    sc_signal< sc_lv<32> > sum1_fu_206_p2;
    sc_signal< sc_lv<32> > sum2_fu_227_p2;
    sc_signal< sc_lv<32> > sum3_fu_248_p2;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_buf_r_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_buf_r_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_buf_r_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_buf_r_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_buf_r_WREADY;
    sc_signal< sc_lv<32> > tmp_s_fu_177_p1;
    sc_signal< sc_lv<4> > tmp_8_fu_181_p1;
    sc_signal< sc_lv<4> > tmp_2_fu_196_p2;
    sc_signal< sc_lv<32> > tmp_2_cast_fu_202_p1;
    sc_signal< sc_lv<4> > tmp_3_fu_217_p2;
    sc_signal< sc_lv<32> > tmp_3_cast_fu_223_p1;
    sc_signal< sc_lv<4> > tmp_4_fu_238_p2;
    sc_signal< sc_lv<32> > tmp_4_cast_fu_244_p1;
    sc_signal< sc_lv<8> > tmp_6_fu_269_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_285_p2;
    sc_signal< sc_lv<1> > tmp_10_fu_278_p3;
    sc_signal< sc_lv<8> > tmp_2_i_fu_290_p2;
    sc_signal< sc_lv<8> > tmp_4_i_fu_296_p3;
    sc_signal< sc_lv<8> > e_fu_273_p2;
    sc_signal< sc_lv<8> > tmp1_fu_304_p2;
    sc_signal< sc_lv<8> > x_assign_1_fu_315_p2;
    sc_signal< sc_lv<8> > tmp_13_fu_327_p2;
    sc_signal< sc_lv<1> > tmp_12_fu_319_p3;
    sc_signal< sc_lv<8> > tmp_2_i1_fu_333_p2;
    sc_signal< sc_lv<8> > tmp_4_i1_fu_339_p3;
    sc_signal< sc_lv<8> > tmp2_fu_347_p2;
    sc_signal< sc_lv<8> > x_assign_2_fu_358_p2;
    sc_signal< sc_lv<8> > tmp_15_fu_370_p2;
    sc_signal< sc_lv<1> > tmp_14_fu_362_p3;
    sc_signal< sc_lv<8> > tmp_2_i2_fu_376_p2;
    sc_signal< sc_lv<8> > tmp_4_i2_fu_382_p3;
    sc_signal< sc_lv<8> > tmp3_fu_390_p2;
    sc_signal< sc_lv<8> > x_assign_3_fu_401_p2;
    sc_signal< sc_lv<8> > tmp_17_fu_413_p2;
    sc_signal< sc_lv<1> > tmp_16_fu_405_p3;
    sc_signal< sc_lv<8> > tmp_2_i3_fu_419_p2;
    sc_signal< sc_lv<8> > tmp_4_i3_fu_425_p3;
    sc_signal< sc_lv<26> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<26> ap_ST_fsm_state1;
    static const sc_lv<26> ap_ST_fsm_state2;
    static const sc_lv<26> ap_ST_fsm_state3;
    static const sc_lv<26> ap_ST_fsm_state4;
    static const sc_lv<26> ap_ST_fsm_state5;
    static const sc_lv<26> ap_ST_fsm_state6;
    static const sc_lv<26> ap_ST_fsm_state7;
    static const sc_lv<26> ap_ST_fsm_state8;
    static const sc_lv<26> ap_ST_fsm_state9;
    static const sc_lv<26> ap_ST_fsm_state10;
    static const sc_lv<26> ap_ST_fsm_state11;
    static const sc_lv<26> ap_ST_fsm_state12;
    static const sc_lv<26> ap_ST_fsm_state13;
    static const sc_lv<26> ap_ST_fsm_state14;
    static const sc_lv<26> ap_ST_fsm_state15;
    static const sc_lv<26> ap_ST_fsm_state16;
    static const sc_lv<26> ap_ST_fsm_state17;
    static const sc_lv<26> ap_ST_fsm_state18;
    static const sc_lv<26> ap_ST_fsm_state19;
    static const sc_lv<26> ap_ST_fsm_state20;
    static const sc_lv<26> ap_ST_fsm_state21;
    static const sc_lv<26> ap_ST_fsm_state22;
    static const sc_lv<26> ap_ST_fsm_state23;
    static const sc_lv<26> ap_ST_fsm_state24;
    static const sc_lv<26> ap_ST_fsm_state25;
    static const sc_lv<26> ap_ST_fsm_state26;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<5> ap_const_lv5_4;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_1B;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_buf_r_ARREADY();
    void thread_ap_sig_ioackin_m_axi_buf_r_AWREADY();
    void thread_ap_sig_ioackin_m_axi_buf_r_WREADY();
    void thread_buf_r_blk_n_AR();
    void thread_buf_r_blk_n_AW();
    void thread_buf_r_blk_n_B();
    void thread_buf_r_blk_n_R();
    void thread_buf_r_blk_n_W();
    void thread_e_fu_273_p2();
    void thread_i_3_fu_259_p2();
    void thread_m_axi_buf_r_ARADDR();
    void thread_m_axi_buf_r_ARBURST();
    void thread_m_axi_buf_r_ARCACHE();
    void thread_m_axi_buf_r_ARID();
    void thread_m_axi_buf_r_ARLEN();
    void thread_m_axi_buf_r_ARLOCK();
    void thread_m_axi_buf_r_ARPROT();
    void thread_m_axi_buf_r_ARQOS();
    void thread_m_axi_buf_r_ARREGION();
    void thread_m_axi_buf_r_ARSIZE();
    void thread_m_axi_buf_r_ARUSER();
    void thread_m_axi_buf_r_ARVALID();
    void thread_m_axi_buf_r_AWADDR();
    void thread_m_axi_buf_r_AWBURST();
    void thread_m_axi_buf_r_AWCACHE();
    void thread_m_axi_buf_r_AWID();
    void thread_m_axi_buf_r_AWLEN();
    void thread_m_axi_buf_r_AWLOCK();
    void thread_m_axi_buf_r_AWPROT();
    void thread_m_axi_buf_r_AWQOS();
    void thread_m_axi_buf_r_AWREGION();
    void thread_m_axi_buf_r_AWSIZE();
    void thread_m_axi_buf_r_AWUSER();
    void thread_m_axi_buf_r_AWVALID();
    void thread_m_axi_buf_r_BREADY();
    void thread_m_axi_buf_r_RREADY();
    void thread_m_axi_buf_r_WDATA();
    void thread_m_axi_buf_r_WID();
    void thread_m_axi_buf_r_WLAST();
    void thread_m_axi_buf_r_WSTRB();
    void thread_m_axi_buf_r_WUSER();
    void thread_m_axi_buf_r_WVALID();
    void thread_sum1_fu_206_p2();
    void thread_sum2_fu_227_p2();
    void thread_sum3_fu_248_p2();
    void thread_sum_fu_185_p2();
    void thread_tmp1_fu_304_p2();
    void thread_tmp2_fu_347_p2();
    void thread_tmp3_fu_390_p2();
    void thread_tmp_10_fu_278_p3();
    void thread_tmp_11_fu_285_p2();
    void thread_tmp_12_fu_319_p3();
    void thread_tmp_13_fu_327_p2();
    void thread_tmp_14_fu_362_p3();
    void thread_tmp_15_fu_370_p2();
    void thread_tmp_16_fu_405_p3();
    void thread_tmp_17_fu_413_p2();
    void thread_tmp_1_fu_396_p2();
    void thread_tmp_2_cast_fu_202_p1();
    void thread_tmp_2_fu_196_p2();
    void thread_tmp_2_i1_fu_333_p2();
    void thread_tmp_2_i2_fu_376_p2();
    void thread_tmp_2_i3_fu_419_p2();
    void thread_tmp_2_i_fu_290_p2();
    void thread_tmp_3_cast_fu_223_p1();
    void thread_tmp_3_fu_217_p2();
    void thread_tmp_4_cast_fu_244_p1();
    void thread_tmp_4_fu_238_p2();
    void thread_tmp_4_i1_fu_339_p3();
    void thread_tmp_4_i2_fu_382_p3();
    void thread_tmp_4_i3_fu_425_p3();
    void thread_tmp_4_i_fu_296_p3();
    void thread_tmp_5_fu_353_p2();
    void thread_tmp_6_fu_269_p2();
    void thread_tmp_7_fu_433_p2();
    void thread_tmp_8_fu_181_p1();
    void thread_tmp_9_fu_310_p2();
    void thread_tmp_fu_169_p3();
    void thread_tmp_s_fu_177_p1();
    void thread_x_assign_1_fu_315_p2();
    void thread_x_assign_2_fu_358_p2();
    void thread_x_assign_3_fu_401_p2();
    void thread_x_assign_fu_265_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
