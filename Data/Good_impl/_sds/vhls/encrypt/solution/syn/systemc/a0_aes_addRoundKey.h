// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _a0_aes_addRoundKey_HH_
#define _a0_aes_addRoundKey_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct a0_aes_addRoundKey : public sc_module {
    // Port declarations 99
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > m_axi_buf_r_AWVALID;
    sc_in< sc_logic > m_axi_buf_r_AWREADY;
    sc_out< sc_lv<32> > m_axi_buf_r_AWADDR;
    sc_out< sc_lv<1> > m_axi_buf_r_AWID;
    sc_out< sc_lv<32> > m_axi_buf_r_AWLEN;
    sc_out< sc_lv<3> > m_axi_buf_r_AWSIZE;
    sc_out< sc_lv<2> > m_axi_buf_r_AWBURST;
    sc_out< sc_lv<2> > m_axi_buf_r_AWLOCK;
    sc_out< sc_lv<4> > m_axi_buf_r_AWCACHE;
    sc_out< sc_lv<3> > m_axi_buf_r_AWPROT;
    sc_out< sc_lv<4> > m_axi_buf_r_AWQOS;
    sc_out< sc_lv<4> > m_axi_buf_r_AWREGION;
    sc_out< sc_lv<1> > m_axi_buf_r_AWUSER;
    sc_out< sc_logic > m_axi_buf_r_WVALID;
    sc_in< sc_logic > m_axi_buf_r_WREADY;
    sc_out< sc_lv<8> > m_axi_buf_r_WDATA;
    sc_out< sc_lv<1> > m_axi_buf_r_WSTRB;
    sc_out< sc_logic > m_axi_buf_r_WLAST;
    sc_out< sc_lv<1> > m_axi_buf_r_WID;
    sc_out< sc_lv<1> > m_axi_buf_r_WUSER;
    sc_out< sc_logic > m_axi_buf_r_ARVALID;
    sc_in< sc_logic > m_axi_buf_r_ARREADY;
    sc_out< sc_lv<32> > m_axi_buf_r_ARADDR;
    sc_out< sc_lv<1> > m_axi_buf_r_ARID;
    sc_out< sc_lv<32> > m_axi_buf_r_ARLEN;
    sc_out< sc_lv<3> > m_axi_buf_r_ARSIZE;
    sc_out< sc_lv<2> > m_axi_buf_r_ARBURST;
    sc_out< sc_lv<2> > m_axi_buf_r_ARLOCK;
    sc_out< sc_lv<4> > m_axi_buf_r_ARCACHE;
    sc_out< sc_lv<3> > m_axi_buf_r_ARPROT;
    sc_out< sc_lv<4> > m_axi_buf_r_ARQOS;
    sc_out< sc_lv<4> > m_axi_buf_r_ARREGION;
    sc_out< sc_lv<1> > m_axi_buf_r_ARUSER;
    sc_in< sc_logic > m_axi_buf_r_RVALID;
    sc_out< sc_logic > m_axi_buf_r_RREADY;
    sc_in< sc_lv<8> > m_axi_buf_r_RDATA;
    sc_in< sc_logic > m_axi_buf_r_RLAST;
    sc_in< sc_lv<1> > m_axi_buf_r_RID;
    sc_in< sc_lv<1> > m_axi_buf_r_RUSER;
    sc_in< sc_lv<2> > m_axi_buf_r_RRESP;
    sc_in< sc_logic > m_axi_buf_r_BVALID;
    sc_out< sc_logic > m_axi_buf_r_BREADY;
    sc_in< sc_lv<2> > m_axi_buf_r_BRESP;
    sc_in< sc_lv<1> > m_axi_buf_r_BID;
    sc_in< sc_lv<1> > m_axi_buf_r_BUSER;
    sc_in< sc_lv<32> > buf_offset;
    sc_out< sc_logic > m_axi_key_AWVALID;
    sc_in< sc_logic > m_axi_key_AWREADY;
    sc_out< sc_lv<32> > m_axi_key_AWADDR;
    sc_out< sc_lv<1> > m_axi_key_AWID;
    sc_out< sc_lv<32> > m_axi_key_AWLEN;
    sc_out< sc_lv<3> > m_axi_key_AWSIZE;
    sc_out< sc_lv<2> > m_axi_key_AWBURST;
    sc_out< sc_lv<2> > m_axi_key_AWLOCK;
    sc_out< sc_lv<4> > m_axi_key_AWCACHE;
    sc_out< sc_lv<3> > m_axi_key_AWPROT;
    sc_out< sc_lv<4> > m_axi_key_AWQOS;
    sc_out< sc_lv<4> > m_axi_key_AWREGION;
    sc_out< sc_lv<1> > m_axi_key_AWUSER;
    sc_out< sc_logic > m_axi_key_WVALID;
    sc_in< sc_logic > m_axi_key_WREADY;
    sc_out< sc_lv<8> > m_axi_key_WDATA;
    sc_out< sc_lv<1> > m_axi_key_WSTRB;
    sc_out< sc_logic > m_axi_key_WLAST;
    sc_out< sc_lv<1> > m_axi_key_WID;
    sc_out< sc_lv<1> > m_axi_key_WUSER;
    sc_out< sc_logic > m_axi_key_ARVALID;
    sc_in< sc_logic > m_axi_key_ARREADY;
    sc_out< sc_lv<32> > m_axi_key_ARADDR;
    sc_out< sc_lv<1> > m_axi_key_ARID;
    sc_out< sc_lv<32> > m_axi_key_ARLEN;
    sc_out< sc_lv<3> > m_axi_key_ARSIZE;
    sc_out< sc_lv<2> > m_axi_key_ARBURST;
    sc_out< sc_lv<2> > m_axi_key_ARLOCK;
    sc_out< sc_lv<4> > m_axi_key_ARCACHE;
    sc_out< sc_lv<3> > m_axi_key_ARPROT;
    sc_out< sc_lv<4> > m_axi_key_ARQOS;
    sc_out< sc_lv<4> > m_axi_key_ARREGION;
    sc_out< sc_lv<1> > m_axi_key_ARUSER;
    sc_in< sc_logic > m_axi_key_RVALID;
    sc_out< sc_logic > m_axi_key_RREADY;
    sc_in< sc_lv<8> > m_axi_key_RDATA;
    sc_in< sc_logic > m_axi_key_RLAST;
    sc_in< sc_lv<1> > m_axi_key_RID;
    sc_in< sc_lv<1> > m_axi_key_RUSER;
    sc_in< sc_lv<2> > m_axi_key_RRESP;
    sc_in< sc_logic > m_axi_key_BVALID;
    sc_out< sc_logic > m_axi_key_BREADY;
    sc_in< sc_lv<2> > m_axi_key_BRESP;
    sc_in< sc_lv<1> > m_axi_key_BID;
    sc_in< sc_lv<1> > m_axi_key_BUSER;
    sc_in< sc_lv<32> > key_offset;
    sc_in< sc_lv<6> > key_offset_offset;


    // Module declarations
    a0_aes_addRoundKey(sc_module_name name);
    SC_HAS_PROCESS(a0_aes_addRoundKey);

    ~a0_aes_addRoundKey();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<18> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > buf_r_blk_n_AR;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > buf_r_blk_n_R;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > buf_r_blk_n_AW;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > buf_r_blk_n_W;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > buf_r_blk_n_B;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > key_blk_n_AR;
    sc_signal< sc_logic > key_blk_n_R;
    sc_signal< sc_lv<5> > tmp_42_fu_121_p1;
    sc_signal< sc_lv<5> > tmp_42_reg_189;
    sc_signal< sc_lv<5> > i_11_fu_125_p2;
    sc_signal< sc_lv<5> > i_11_reg_194;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > sum_fu_145_p2;
    sc_signal< sc_lv<5> > sum_reg_202;
    sc_signal< sc_lv<1> > tmp_fu_135_p2;
    sc_signal< sc_lv<32> > buf_addr_reg_207;
    sc_signal< sc_lv<32> > key_addr_reg_214;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > key_addr_read_reg_220;
    sc_signal< bool > ap_block_state11;
    sc_signal< sc_lv<8> > buf_addr_read_reg_225;
    sc_signal< sc_lv<8> > tmp_34_fu_175_p2;
    sc_signal< sc_lv<8> > tmp_34_reg_230;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_buf_r_AWREADY;
    sc_signal< sc_lv<5> > i_reg_110;
    sc_signal< sc_lv<32> > sum1_fu_150_p2;
    sc_signal< sc_lv<32> > sum3_fu_164_p2;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_key_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_key_ARREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_buf_r_ARREADY;
    sc_signal< bool > ap_block_state4_io;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_buf_r_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_buf_r_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_m_axi_buf_r_WREADY;
    sc_signal< sc_logic > ap_sig_ioackin_m_axi_buf_r_WREADY;
    sc_signal< sc_lv<8> > i_11_cast_fu_131_p1;
    sc_signal< sc_lv<32> > tmp_s_fu_141_p1;
    sc_signal< sc_lv<32> > sum_cast_fu_161_p1;
    sc_signal< sc_lv<18> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_fsm_state1;
    static const sc_lv<18> ap_ST_fsm_state2;
    static const sc_lv<18> ap_ST_fsm_state3;
    static const sc_lv<18> ap_ST_fsm_state4;
    static const sc_lv<18> ap_ST_fsm_state5;
    static const sc_lv<18> ap_ST_fsm_state6;
    static const sc_lv<18> ap_ST_fsm_state7;
    static const sc_lv<18> ap_ST_fsm_state8;
    static const sc_lv<18> ap_ST_fsm_state9;
    static const sc_lv<18> ap_ST_fsm_state10;
    static const sc_lv<18> ap_ST_fsm_state11;
    static const sc_lv<18> ap_ST_fsm_state12;
    static const sc_lv<18> ap_ST_fsm_state13;
    static const sc_lv<18> ap_ST_fsm_state14;
    static const sc_lv<18> ap_ST_fsm_state15;
    static const sc_lv<18> ap_ST_fsm_state16;
    static const sc_lv<18> ap_ST_fsm_state17;
    static const sc_lv<18> ap_ST_fsm_state18;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<5> ap_const_lv5_10;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state11();
    void thread_ap_block_state4_io();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_ioackin_m_axi_buf_r_ARREADY();
    void thread_ap_sig_ioackin_m_axi_buf_r_AWREADY();
    void thread_ap_sig_ioackin_m_axi_buf_r_WREADY();
    void thread_ap_sig_ioackin_m_axi_key_ARREADY();
    void thread_buf_r_blk_n_AR();
    void thread_buf_r_blk_n_AW();
    void thread_buf_r_blk_n_B();
    void thread_buf_r_blk_n_R();
    void thread_buf_r_blk_n_W();
    void thread_i_11_cast_fu_131_p1();
    void thread_i_11_fu_125_p2();
    void thread_key_blk_n_AR();
    void thread_key_blk_n_R();
    void thread_m_axi_buf_r_ARADDR();
    void thread_m_axi_buf_r_ARBURST();
    void thread_m_axi_buf_r_ARCACHE();
    void thread_m_axi_buf_r_ARID();
    void thread_m_axi_buf_r_ARLEN();
    void thread_m_axi_buf_r_ARLOCK();
    void thread_m_axi_buf_r_ARPROT();
    void thread_m_axi_buf_r_ARQOS();
    void thread_m_axi_buf_r_ARREGION();
    void thread_m_axi_buf_r_ARSIZE();
    void thread_m_axi_buf_r_ARUSER();
    void thread_m_axi_buf_r_ARVALID();
    void thread_m_axi_buf_r_AWADDR();
    void thread_m_axi_buf_r_AWBURST();
    void thread_m_axi_buf_r_AWCACHE();
    void thread_m_axi_buf_r_AWID();
    void thread_m_axi_buf_r_AWLEN();
    void thread_m_axi_buf_r_AWLOCK();
    void thread_m_axi_buf_r_AWPROT();
    void thread_m_axi_buf_r_AWQOS();
    void thread_m_axi_buf_r_AWREGION();
    void thread_m_axi_buf_r_AWSIZE();
    void thread_m_axi_buf_r_AWUSER();
    void thread_m_axi_buf_r_AWVALID();
    void thread_m_axi_buf_r_BREADY();
    void thread_m_axi_buf_r_RREADY();
    void thread_m_axi_buf_r_WDATA();
    void thread_m_axi_buf_r_WID();
    void thread_m_axi_buf_r_WLAST();
    void thread_m_axi_buf_r_WSTRB();
    void thread_m_axi_buf_r_WUSER();
    void thread_m_axi_buf_r_WVALID();
    void thread_m_axi_key_ARADDR();
    void thread_m_axi_key_ARBURST();
    void thread_m_axi_key_ARCACHE();
    void thread_m_axi_key_ARID();
    void thread_m_axi_key_ARLEN();
    void thread_m_axi_key_ARLOCK();
    void thread_m_axi_key_ARPROT();
    void thread_m_axi_key_ARQOS();
    void thread_m_axi_key_ARREGION();
    void thread_m_axi_key_ARSIZE();
    void thread_m_axi_key_ARUSER();
    void thread_m_axi_key_ARVALID();
    void thread_m_axi_key_AWADDR();
    void thread_m_axi_key_AWBURST();
    void thread_m_axi_key_AWCACHE();
    void thread_m_axi_key_AWID();
    void thread_m_axi_key_AWLEN();
    void thread_m_axi_key_AWLOCK();
    void thread_m_axi_key_AWPROT();
    void thread_m_axi_key_AWQOS();
    void thread_m_axi_key_AWREGION();
    void thread_m_axi_key_AWSIZE();
    void thread_m_axi_key_AWUSER();
    void thread_m_axi_key_AWVALID();
    void thread_m_axi_key_BREADY();
    void thread_m_axi_key_RREADY();
    void thread_m_axi_key_WDATA();
    void thread_m_axi_key_WID();
    void thread_m_axi_key_WLAST();
    void thread_m_axi_key_WSTRB();
    void thread_m_axi_key_WUSER();
    void thread_m_axi_key_WVALID();
    void thread_sum1_fu_150_p2();
    void thread_sum3_fu_164_p2();
    void thread_sum_cast_fu_161_p1();
    void thread_sum_fu_145_p2();
    void thread_tmp_34_fu_175_p2();
    void thread_tmp_42_fu_121_p1();
    void thread_tmp_fu_135_p2();
    void thread_tmp_s_fu_141_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
