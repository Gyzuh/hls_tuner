-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_bin_dense is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    wt_mem_0_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    wt_mem_0_V_ce0 : OUT STD_LOGIC;
    wt_mem_0_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    wt_mem_1_V_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    wt_mem_1_V_ce0 : OUT STD_LOGIC;
    wt_mem_1_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kh_mem_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    kh_mem_V_ce0 : OUT STD_LOGIC;
    kh_mem_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_0_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dmem_0_0_V_ce0 : OUT STD_LOGIC;
    dmem_0_0_V_we0 : OUT STD_LOGIC;
    dmem_0_0_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dmem_0_0_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_0_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dmem_0_1_V_ce0 : OUT STD_LOGIC;
    dmem_0_1_V_we0 : OUT STD_LOGIC;
    dmem_0_1_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dmem_0_1_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_1_0_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dmem_1_0_V_ce0 : OUT STD_LOGIC;
    dmem_1_0_V_we0 : OUT STD_LOGIC;
    dmem_1_0_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dmem_1_0_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dmem_1_1_V_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dmem_1_1_V_ce0 : OUT STD_LOGIC;
    dmem_1_1_V_we0 : OUT STD_LOGIC;
    dmem_1_1_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dmem_1_1_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    layer_type_V : IN STD_LOGIC_VECTOR (1 downto 0);
    d_i_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
    d_o_idx_V : IN STD_LOGIC_VECTOR (0 downto 0);
    o_index_V : IN STD_LOGIC_VECTOR (15 downto 0);
    n_inputs : IN STD_LOGIC_VECTOR (15 downto 0);
    n_outputs : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of a0_bin_dense is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv16_C000 : STD_LOGIC_VECTOR (15 downto 0) := "1100000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv9_40 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_Val2_3_reg_502 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_5_reg_514 : STD_LOGIC_VECTOR (15 downto 0);
    signal d_o_idx_V_read_read_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_525_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_3635 : STD_LOGIC_VECTOR (0 downto 0);
    signal lhs_V_fu_531_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal lhs_V_reg_3643 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_1147_fu_535_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1147_reg_3648 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp_reg_3653 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_545_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_s_reg_3658 : STD_LOGIC_VECTOR (21 downto 0);
    signal next_mul_fu_549_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal next_mul_reg_3663 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal o_V_fu_559_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal o_V_reg_3671 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1149_reg_3676 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal dmem_0_0_V_addr_reg_3683 : STD_LOGIC_VECTOR (9 downto 0);
    signal dmem_0_1_V_addr_reg_3688 : STD_LOGIC_VECTOR (9 downto 0);
    signal dmem_1_0_V_addr_reg_3693 : STD_LOGIC_VECTOR (9 downto 0);
    signal dmem_1_1_V_addr_reg_3698 : STD_LOGIC_VECTOR (9 downto 0);
    signal sel_tmp2_fu_624_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sel_tmp2_reg_3706 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal o_offset_V_fu_636_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal o_offset_V_reg_3711 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal o_word_V_4_fu_662_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal o_word_V_4_reg_3716 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_3723 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_57_reg_3723 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_57_reg_3723 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_57_reg_3723 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_tmp_57_reg_3723 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter5_tmp_57_reg_3723 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_V_fu_719_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal r_V_s_fu_732_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_s_reg_3762 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1150_reg_3767 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1151_reg_3772 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1152_reg_3777 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1153_reg_3782 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1154_reg_3787 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1155_reg_3792 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1156_reg_3797 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1157_reg_3802 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1158_reg_3807 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1159_reg_3812 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1160_reg_3817 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1161_reg_3822 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1162_reg_3827 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1163_reg_3832 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1164_reg_3837 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1165_reg_3842 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1166_reg_3847 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1167_reg_3852 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1168_reg_3857 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1169_reg_3862 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1170_reg_3867 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1171_reg_3872 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1172_reg_3877 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1173_reg_3882 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1174_reg_3887 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1175_reg_3892 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1176_reg_3897 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1177_reg_3902 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1178_reg_3907 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1179_reg_3912 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1180_reg_3917 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1181_reg_3922 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_49_1_fu_1001_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_49_1_reg_3927 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1184_reg_3932 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1185_reg_3937 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1186_reg_3942 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1187_reg_3947 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1188_reg_3952 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1189_reg_3957 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1190_reg_3962 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1191_reg_3967 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1192_reg_3972 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1193_reg_3977 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1194_reg_3982 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1195_reg_3987 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1196_reg_3992 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1197_reg_3997 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1198_reg_4002 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1199_reg_4007 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1200_reg_4012 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1201_reg_4017 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1202_reg_4022 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1203_reg_4027 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1204_reg_4032 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1205_reg_4037 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1206_reg_4042 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1207_reg_4047 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1208_reg_4052 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1209_reg_4057 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1210_reg_4062 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1211_reg_4067 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1212_reg_4072 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1213_reg_4077 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1214_reg_4082 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1215_reg_4087 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_reg_4092 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_62_reg_4097 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_63_reg_4103 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_reg_4109 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_65_reg_4115 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_109_reg_4121 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_110_reg_4127 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_111_reg_4133 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_112_reg_4139 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_113_reg_4145 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_114_reg_4151 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_115_reg_4157 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_116_reg_4163 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_117_reg_4169 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_118_reg_4175 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1182_fu_1520_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1182_reg_4181 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_119_reg_4188 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_120_reg_4193 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_121_reg_4199 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_122_reg_4205 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_123_reg_4211 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_124_reg_4217 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_125_reg_4223 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_126_reg_4229 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_127_reg_4235 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_128_reg_4241 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_129_reg_4247 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_130_reg_4253 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_131_reg_4259 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_132_reg_4265 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_133_reg_4271 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_134_reg_4277 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_147_reg_4284 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_148_reg_4289 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_149_reg_4295 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_150_reg_4301 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_151_reg_4307 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_152_reg_4313 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_153_reg_4319 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_154_reg_4325 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_155_reg_4331 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_156_reg_4337 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_157_reg_4343 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_158_reg_4349 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_159_reg_4355 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_160_reg_4361 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_161_reg_4367 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1216_fu_1941_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1216_reg_4373 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_162_reg_4380 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_163_reg_4385 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_164_reg_4391 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_165_reg_4397 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_166_reg_4403 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_167_reg_4409 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_168_reg_4415 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_169_reg_4421 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_170_reg_4427 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_171_reg_4433 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_172_reg_4439 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_173_reg_4445 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_174_reg_4451 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_175_reg_4457 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_176_reg_4463 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_177_reg_4469 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_137_reg_4476 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_138_reg_4482 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_139_reg_4489 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_140_reg_4497 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_141_reg_4505 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_142_reg_4513 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_143_reg_4521 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter4_tmp_143_reg_4521 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1183_fu_2435_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1183_reg_4530 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_71_fu_2445_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_71_reg_4536 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter4_tmp_71_reg_4536 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_180_reg_4541 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_181_reg_4547 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_182_reg_4554 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_183_reg_4562 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_184_reg_4570 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_185_reg_4578 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_186_reg_4586 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter4_tmp_186_reg_4586 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1217_fu_2781_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1217_reg_4595 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2791_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_reg_4601 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter4_tmp_88_reg_4601 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_76_reg_4606 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_77_reg_4611 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_104_reg_4616 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_105_reg_4621 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_80_fu_3143_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_80_reg_4626 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1883_s_fu_3169_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_1883_s_reg_4631 : STD_LOGIC_VECTOR (6 downto 0);
    signal sum_V_1_fu_3227_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal kh_off_V_1_fu_3248_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal kh_off_V_1_reg_4646 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal kh_word_V_2_reg_4651 : STD_LOGIC_VECTOR (63 downto 0);
    signal ki_V_2_fu_3266_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ki_V_2_reg_4657 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal p_Val2_1_fu_3597_p2 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_1_reg_4667 : STD_LOGIC_VECTOR (35 downto 0);
    signal p_Val2_2_fu_3384_p2 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_Val2_2_reg_4672 : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal not_s_fu_3504_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_s_reg_4677 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_demorgan_fu_3516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp25_demorgan_reg_4682 : STD_LOGIC_VECTOR (0 downto 0);
    signal best_out_V_2_fu_3560_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal prediction_V_2_fu_3590_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal p_Val2_7_reg_454 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_s_reg_466 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_s_reg_478 : STD_LOGIC_VECTOR (15 downto 0);
    signal phi_mul_reg_490 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_56_fu_589_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_695_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_60_fu_713_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_91_fu_3243_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_3284_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal o_word_V_3_fu_3573_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_9_fu_610_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_fu_565_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal r_V_fu_574_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_55_fu_579_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_54_fu_569_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp1_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1148_fu_632_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sel_tmp3_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp4_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_651_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_4_cast_fu_675_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal r_V_9_fu_685_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_7_fu_679_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_0856_s_fu_703_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal in_wrd_V_0_phi_fu_725_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal in_wrd_V_1_phi_fu_994_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_1_fu_1263_p64 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_1_cast_fu_1361_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_V_6_fu_1365_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_44_1_fu_1684_p64 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_44_1_cast_fu_1782_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_V_6_1_fu_1786_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_2_fu_2105_p32 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_3_fu_2159_p32 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_2_cast_fu_2155_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_3_cast_fu_2209_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal x_V_fu_2317_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_136_fu_2329_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_67_fu_2262_p31 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_66_fu_2213_p31 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_69_fu_2343_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_68_fu_2339_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_135_fu_2311_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_186_cast_fu_2349_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_70_fu_2355_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1233_cast_fu_2323_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1234_cast_fu_2326_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp41_fu_2439_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_V_45_1_fu_2451_p32 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_46_1_fu_2505_p32 : STD_LOGIC_VECTOR (61 downto 0);
    signal r_V_45_1_cast_fu_2501_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal r_V_46_1_cast_fu_2555_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal x_V_1_fu_2663_p2 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_179_fu_2675_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_84_fu_2608_p31 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_83_fu_2559_p31 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_86_fu_2689_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_85_fu_2685_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_178_fu_2657_p2 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_186_1_cast_fu_2695_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_87_fu_2701_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1248_cast_fu_2669_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1249_cast_fu_2672_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp44_fu_2785_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal x_V_2_fu_2797_p16 : STD_LOGIC_VECTOR (59 downto 0);
    signal r_V_4_fu_2827_p14 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_144_fu_2850_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal x_V_2_cast_fu_2823_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal r_V_4_cast_fu_2854_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_73_fu_2880_p13 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_72_fu_2858_p13 : STD_LOGIC_VECTOR (46 downto 0);
    signal x_V_3_fu_2908_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_146_fu_2920_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal x_V_3_cast_fu_2914_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal r_V_5_cast_fu_2930_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal x_V_4_fu_2934_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_145_fu_2902_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal x_V_2_1_fu_2960_p16 : STD_LOGIC_VECTOR (59 downto 0);
    signal r_V_47_1_fu_2990_p14 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_187_fu_3013_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal x_V_2_1_cast_fu_2986_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal r_V_47_1_cast_fu_3017_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_98_fu_3043_p13 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_94_fu_3021_p13 : STD_LOGIC_VECTOR (46 downto 0);
    signal x_V_3_1_fu_3071_p2 : STD_LOGIC_VECTOR (60 downto 0);
    signal tmp_189_fu_3083_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal x_V_3_1_cast_fu_3077_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal r_V_48_1_cast_fu_3093_p1 : STD_LOGIC_VECTOR (46 downto 0);
    signal x_V_4_1_fu_3097_p2 : STD_LOGIC_VECTOR (46 downto 0);
    signal tmp_188_fu_3065_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_75_fu_3126_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_74_fu_3123_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_78_fu_3133_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_79_fu_3137_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_103_fu_3152_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_100_fu_3149_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_106_fu_3159_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_107_fu_3163_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_81_fu_3175_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp_cast_fu_3182_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_82_fu_3186_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_189_1_fu_3196_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal phitmp_1_cast_fu_3203_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_190_1_fu_3207_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_190_cast_fu_3192_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_190_1_cast_fu_3213_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_108_fu_3217_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_cast_fu_3223_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_10_fu_3233_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal loc_V_8_fu_3256_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_7_fu_3252_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal r_V_8_fu_3274_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_1222_fu_3289_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_95_fu_3293_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal kh_off_V_fu_3308_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_190_fu_3347_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_191_fu_3356_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_192_fu_3365_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_97_fu_3372_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_104_cast_fu_3380_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal tmp_96_fu_3344_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal p_Val2_6_fu_3390_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmp_107_cast_fu_3426_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_101_fu_3430_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_90_fu_3312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_92_fu_3322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp12_fu_3444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_demorgan_fu_3456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_93_fu_3338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp17_fu_3462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp18_fu_3468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_10_fu_3406_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_9_fu_3328_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal sel_tmp13_fu_3450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loc_V_fu_3318_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal loc_V_11_fu_3416_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_cond_fu_3482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_3474_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal newSel1_fu_3488_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal nc_V_4_fu_3496_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_99_fu_3400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_102_fu_3438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp47_fu_3510_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bvh_d_index_fu_3521_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_s_fu_3524_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_s_63_fu_3540_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal best_out_V_fu_3549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal best_out_V_1_fu_3553_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_s_fu_3527_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal o_word_V_2_fu_3567_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal prediction_V_fu_3536_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal prediction_V_1_fu_3583_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component a0_top_mul_mul_20s_1bkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        dout : OUT STD_LOGIC_VECTOR (35 downto 0) );
    end component;



begin
    top_mul_mul_20s_1bkb_U1 : component a0_top_mul_mul_20s_1bkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 20,
        din1_WIDTH => 16,
        dout_WIDTH => 36)
    port map (
        din0 => tmp_95_fu_3293_p3,
        din1 => ki_V_2_reg_4657,
        dout => p_Val2_1_fu_3597_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state5 xor ap_const_logic_1);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_block_pp0_stage0_subdone = ap_const_boolean_0)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_5_reg_514_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = tmp_57_fu_670_p2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
                p_5_reg_514 <= i_V_fu_719_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_5_reg_514 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_Val2_3_reg_502_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_const_lv1_1 = ap_reg_pp0_iter5_tmp_57_reg_3723))) then 
                p_Val2_3_reg_502 <= sum_V_1_fu_3227_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_3_reg_502 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    p_Val2_7_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_Val2_7_reg_454 <= best_out_V_2_fu_3560_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Val2_7_reg_454 <= ap_const_lv16_C000;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_466_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_Val2_s_reg_466 <= prediction_V_2_fu_3590_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_Val2_s_reg_466 <= ap_const_lv8_FF;
            end if; 
        end if;
    end process;

    p_s_reg_478_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                p_s_reg_478 <= o_V_reg_3671;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                p_s_reg_478 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_490_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                phi_mul_reg_490 <= next_mul_reg_3663;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_reg_490 <= ap_const_lv22_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_tmp_57_reg_3723 <= tmp_57_reg_3723;
                tmp_57_reg_3723 <= tmp_57_fu_670_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_block_pp0_stage0_11001 = ap_const_boolean_0)) then
                ap_reg_pp0_iter2_tmp_57_reg_3723 <= ap_reg_pp0_iter1_tmp_57_reg_3723;
                ap_reg_pp0_iter3_tmp_57_reg_3723 <= ap_reg_pp0_iter2_tmp_57_reg_3723;
                ap_reg_pp0_iter4_tmp_143_reg_4521 <= tmp_143_reg_4521;
                ap_reg_pp0_iter4_tmp_186_reg_4586 <= tmp_186_reg_4586;
                ap_reg_pp0_iter4_tmp_57_reg_3723 <= ap_reg_pp0_iter3_tmp_57_reg_3723;
                ap_reg_pp0_iter4_tmp_71_reg_4536 <= tmp_71_reg_4536;
                ap_reg_pp0_iter4_tmp_88_reg_4601 <= tmp_88_reg_4601;
                ap_reg_pp0_iter5_tmp_57_reg_3723 <= ap_reg_pp0_iter4_tmp_57_reg_3723;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_0))) then
                dmem_0_0_V_addr_reg_3683 <= tmp_56_fu_589_p1(10 - 1 downto 0);
                dmem_0_1_V_addr_reg_3688 <= tmp_56_fu_589_p1(10 - 1 downto 0);
                dmem_1_0_V_addr_reg_3693 <= tmp_56_fu_589_p1(10 - 1 downto 0);
                dmem_1_1_V_addr_reg_3698 <= tmp_56_fu_589_p1(10 - 1 downto 0);
                tmp_1149_reg_3676 <= tmp_54_fu_569_p2(6 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                kh_off_V_1_reg_4646 <= kh_off_V_1_fu_3248_p1;
                kh_word_V_2_reg_4651 <= kh_mem_V_q0;
                ki_V_2_reg_4657 <= ki_V_2_fu_3266_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    lhs_V_reg_3643(15 downto 0) <= lhs_V_fu_531_p1(15 downto 0);
                sel_tmp_reg_3653 <= sel_tmp_fu_539_p2;
                tmp_1147_reg_3648 <= tmp_1147_fu_535_p1;
                tmp_reg_3635 <= tmp_fu_525_p2;
                    tmp_s_reg_3658(15 downto 0) <= tmp_s_fu_545_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                next_mul_reg_3663 <= next_mul_fu_549_p2;
                o_V_reg_3671 <= o_V_fu_559_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_3635 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                not_s_reg_4677 <= not_s_fu_3504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (tmp_reg_3635 = ap_const_lv1_1))) then
                o_offset_V_reg_3711 <= o_offset_V_fu_636_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                o_word_V_4_reg_3716 <= o_word_V_4_fu_662_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                p_Val2_1_reg_4667 <= p_Val2_1_fu_3597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                p_Val2_2_reg_4672 <= p_Val2_2_fu_3384_p2;
                sel_tmp25_demorgan_reg_4682 <= sel_tmp25_demorgan_fu_3516_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = tmp_57_reg_3723))) then
                r_V_49_1_reg_3927 <= r_V_49_1_fu_1001_p2;
                r_V_s_reg_3762 <= r_V_s_fu_732_p2;
                tmp_1150_reg_3767 <= r_V_s_fu_732_p2(63 downto 63);
                tmp_1151_reg_3772 <= r_V_s_fu_732_p2(61 downto 61);
                tmp_1152_reg_3777 <= r_V_s_fu_732_p2(59 downto 59);
                tmp_1153_reg_3782 <= r_V_s_fu_732_p2(57 downto 57);
                tmp_1154_reg_3787 <= r_V_s_fu_732_p2(55 downto 55);
                tmp_1155_reg_3792 <= r_V_s_fu_732_p2(53 downto 53);
                tmp_1156_reg_3797 <= r_V_s_fu_732_p2(51 downto 51);
                tmp_1157_reg_3802 <= r_V_s_fu_732_p2(49 downto 49);
                tmp_1158_reg_3807 <= r_V_s_fu_732_p2(47 downto 47);
                tmp_1159_reg_3812 <= r_V_s_fu_732_p2(45 downto 45);
                tmp_1160_reg_3817 <= r_V_s_fu_732_p2(43 downto 43);
                tmp_1161_reg_3822 <= r_V_s_fu_732_p2(41 downto 41);
                tmp_1162_reg_3827 <= r_V_s_fu_732_p2(39 downto 39);
                tmp_1163_reg_3832 <= r_V_s_fu_732_p2(37 downto 37);
                tmp_1164_reg_3837 <= r_V_s_fu_732_p2(35 downto 35);
                tmp_1165_reg_3842 <= r_V_s_fu_732_p2(33 downto 33);
                tmp_1166_reg_3847 <= r_V_s_fu_732_p2(31 downto 31);
                tmp_1167_reg_3852 <= r_V_s_fu_732_p2(29 downto 29);
                tmp_1168_reg_3857 <= r_V_s_fu_732_p2(27 downto 27);
                tmp_1169_reg_3862 <= r_V_s_fu_732_p2(25 downto 25);
                tmp_1170_reg_3867 <= r_V_s_fu_732_p2(23 downto 23);
                tmp_1171_reg_3872 <= r_V_s_fu_732_p2(21 downto 21);
                tmp_1172_reg_3877 <= r_V_s_fu_732_p2(19 downto 19);
                tmp_1173_reg_3882 <= r_V_s_fu_732_p2(17 downto 17);
                tmp_1174_reg_3887 <= r_V_s_fu_732_p2(15 downto 15);
                tmp_1175_reg_3892 <= r_V_s_fu_732_p2(13 downto 13);
                tmp_1176_reg_3897 <= r_V_s_fu_732_p2(11 downto 11);
                tmp_1177_reg_3902 <= r_V_s_fu_732_p2(9 downto 9);
                tmp_1178_reg_3907 <= r_V_s_fu_732_p2(7 downto 7);
                tmp_1179_reg_3912 <= r_V_s_fu_732_p2(5 downto 5);
                tmp_1180_reg_3917 <= r_V_s_fu_732_p2(3 downto 3);
                tmp_1181_reg_3922 <= r_V_s_fu_732_p2(1 downto 1);
                tmp_1184_reg_3932 <= r_V_49_1_fu_1001_p2(63 downto 63);
                tmp_1185_reg_3937 <= r_V_49_1_fu_1001_p2(61 downto 61);
                tmp_1186_reg_3942 <= r_V_49_1_fu_1001_p2(59 downto 59);
                tmp_1187_reg_3947 <= r_V_49_1_fu_1001_p2(57 downto 57);
                tmp_1188_reg_3952 <= r_V_49_1_fu_1001_p2(55 downto 55);
                tmp_1189_reg_3957 <= r_V_49_1_fu_1001_p2(53 downto 53);
                tmp_1190_reg_3962 <= r_V_49_1_fu_1001_p2(51 downto 51);
                tmp_1191_reg_3967 <= r_V_49_1_fu_1001_p2(49 downto 49);
                tmp_1192_reg_3972 <= r_V_49_1_fu_1001_p2(47 downto 47);
                tmp_1193_reg_3977 <= r_V_49_1_fu_1001_p2(45 downto 45);
                tmp_1194_reg_3982 <= r_V_49_1_fu_1001_p2(43 downto 43);
                tmp_1195_reg_3987 <= r_V_49_1_fu_1001_p2(41 downto 41);
                tmp_1196_reg_3992 <= r_V_49_1_fu_1001_p2(39 downto 39);
                tmp_1197_reg_3997 <= r_V_49_1_fu_1001_p2(37 downto 37);
                tmp_1198_reg_4002 <= r_V_49_1_fu_1001_p2(35 downto 35);
                tmp_1199_reg_4007 <= r_V_49_1_fu_1001_p2(33 downto 33);
                tmp_1200_reg_4012 <= r_V_49_1_fu_1001_p2(31 downto 31);
                tmp_1201_reg_4017 <= r_V_49_1_fu_1001_p2(29 downto 29);
                tmp_1202_reg_4022 <= r_V_49_1_fu_1001_p2(27 downto 27);
                tmp_1203_reg_4027 <= r_V_49_1_fu_1001_p2(25 downto 25);
                tmp_1204_reg_4032 <= r_V_49_1_fu_1001_p2(23 downto 23);
                tmp_1205_reg_4037 <= r_V_49_1_fu_1001_p2(21 downto 21);
                tmp_1206_reg_4042 <= r_V_49_1_fu_1001_p2(19 downto 19);
                tmp_1207_reg_4047 <= r_V_49_1_fu_1001_p2(17 downto 17);
                tmp_1208_reg_4052 <= r_V_49_1_fu_1001_p2(15 downto 15);
                tmp_1209_reg_4057 <= r_V_49_1_fu_1001_p2(13 downto 13);
                tmp_1210_reg_4062 <= r_V_49_1_fu_1001_p2(11 downto 11);
                tmp_1211_reg_4067 <= r_V_49_1_fu_1001_p2(9 downto 9);
                tmp_1212_reg_4072 <= r_V_49_1_fu_1001_p2(7 downto 7);
                tmp_1213_reg_4077 <= r_V_49_1_fu_1001_p2(5 downto 5);
                tmp_1214_reg_4082 <= r_V_49_1_fu_1001_p2(3 downto 3);
                tmp_1215_reg_4087 <= r_V_49_1_fu_1001_p2(1 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                sel_tmp2_reg_3706 <= sel_tmp2_fu_624_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter3_tmp_57_reg_3723))) then
                tmp_104_reg_4616 <= x_V_4_1_fu_3097_p2(38 downto 32);
                tmp_105_reg_4621 <= tmp_188_fu_3065_p2(22 downto 16);
                tmp_76_reg_4606 <= x_V_4_fu_2934_p2(38 downto 32);
                tmp_77_reg_4611 <= tmp_145_fu_2902_p2(22 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_57_reg_3723))) then
                tmp_109_reg_4121 <= x_V_6_fu_1365_p2(41 downto 40);
                tmp_110_reg_4127 <= x_V_6_fu_1365_p2(37 downto 36);
                tmp_111_reg_4133 <= x_V_6_fu_1365_p2(33 downto 32);
                tmp_112_reg_4139 <= x_V_6_fu_1365_p2(29 downto 28);
                tmp_113_reg_4145 <= x_V_6_fu_1365_p2(25 downto 24);
                tmp_114_reg_4151 <= x_V_6_fu_1365_p2(21 downto 20);
                tmp_115_reg_4157 <= x_V_6_fu_1365_p2(17 downto 16);
                tmp_116_reg_4163 <= x_V_6_fu_1365_p2(13 downto 12);
                tmp_117_reg_4169 <= x_V_6_fu_1365_p2(9 downto 8);
                tmp_1182_reg_4181 <= tmp_1182_fu_1520_p1;
                tmp_118_reg_4175 <= x_V_6_fu_1365_p2(5 downto 4);
                tmp_119_reg_4188 <= x_V_6_fu_1365_p2(63 downto 62);
                tmp_120_reg_4193 <= x_V_6_fu_1365_p2(59 downto 58);
                tmp_1216_reg_4373 <= tmp_1216_fu_1941_p1;
                tmp_121_reg_4199 <= x_V_6_fu_1365_p2(55 downto 54);
                tmp_122_reg_4205 <= x_V_6_fu_1365_p2(51 downto 50);
                tmp_123_reg_4211 <= x_V_6_fu_1365_p2(47 downto 46);
                tmp_124_reg_4217 <= x_V_6_fu_1365_p2(43 downto 42);
                tmp_125_reg_4223 <= x_V_6_fu_1365_p2(39 downto 38);
                tmp_126_reg_4229 <= x_V_6_fu_1365_p2(35 downto 34);
                tmp_127_reg_4235 <= x_V_6_fu_1365_p2(31 downto 30);
                tmp_128_reg_4241 <= x_V_6_fu_1365_p2(27 downto 26);
                tmp_129_reg_4247 <= x_V_6_fu_1365_p2(23 downto 22);
                tmp_130_reg_4253 <= x_V_6_fu_1365_p2(19 downto 18);
                tmp_131_reg_4259 <= x_V_6_fu_1365_p2(15 downto 14);
                tmp_132_reg_4265 <= x_V_6_fu_1365_p2(11 downto 10);
                tmp_133_reg_4271 <= x_V_6_fu_1365_p2(7 downto 6);
                tmp_134_reg_4277 <= x_V_6_fu_1365_p2(3 downto 2);
                tmp_147_reg_4284 <= x_V_6_1_fu_1786_p2(61 downto 60);
                tmp_148_reg_4289 <= x_V_6_1_fu_1786_p2(57 downto 56);
                tmp_149_reg_4295 <= x_V_6_1_fu_1786_p2(53 downto 52);
                tmp_150_reg_4301 <= x_V_6_1_fu_1786_p2(49 downto 48);
                tmp_151_reg_4307 <= x_V_6_1_fu_1786_p2(45 downto 44);
                tmp_152_reg_4313 <= x_V_6_1_fu_1786_p2(41 downto 40);
                tmp_153_reg_4319 <= x_V_6_1_fu_1786_p2(37 downto 36);
                tmp_154_reg_4325 <= x_V_6_1_fu_1786_p2(33 downto 32);
                tmp_155_reg_4331 <= x_V_6_1_fu_1786_p2(29 downto 28);
                tmp_156_reg_4337 <= x_V_6_1_fu_1786_p2(25 downto 24);
                tmp_157_reg_4343 <= x_V_6_1_fu_1786_p2(21 downto 20);
                tmp_158_reg_4349 <= x_V_6_1_fu_1786_p2(17 downto 16);
                tmp_159_reg_4355 <= x_V_6_1_fu_1786_p2(13 downto 12);
                tmp_160_reg_4361 <= x_V_6_1_fu_1786_p2(9 downto 8);
                tmp_161_reg_4367 <= x_V_6_1_fu_1786_p2(5 downto 4);
                tmp_162_reg_4380 <= x_V_6_1_fu_1786_p2(63 downto 62);
                tmp_163_reg_4385 <= x_V_6_1_fu_1786_p2(59 downto 58);
                tmp_164_reg_4391 <= x_V_6_1_fu_1786_p2(55 downto 54);
                tmp_165_reg_4397 <= x_V_6_1_fu_1786_p2(51 downto 50);
                tmp_166_reg_4403 <= x_V_6_1_fu_1786_p2(47 downto 46);
                tmp_167_reg_4409 <= x_V_6_1_fu_1786_p2(43 downto 42);
                tmp_168_reg_4415 <= x_V_6_1_fu_1786_p2(39 downto 38);
                tmp_169_reg_4421 <= x_V_6_1_fu_1786_p2(35 downto 34);
                tmp_170_reg_4427 <= x_V_6_1_fu_1786_p2(31 downto 30);
                tmp_171_reg_4433 <= x_V_6_1_fu_1786_p2(27 downto 26);
                tmp_172_reg_4439 <= x_V_6_1_fu_1786_p2(23 downto 22);
                tmp_173_reg_4445 <= x_V_6_1_fu_1786_p2(19 downto 18);
                tmp_174_reg_4451 <= x_V_6_1_fu_1786_p2(15 downto 14);
                tmp_175_reg_4457 <= x_V_6_1_fu_1786_p2(11 downto 10);
                tmp_176_reg_4463 <= x_V_6_1_fu_1786_p2(7 downto 6);
                tmp_177_reg_4469 <= x_V_6_1_fu_1786_p2(3 downto 2);
                tmp_61_reg_4092 <= x_V_6_fu_1365_p2(61 downto 60);
                tmp_62_reg_4097 <= x_V_6_fu_1365_p2(57 downto 56);
                tmp_63_reg_4103 <= x_V_6_fu_1365_p2(53 downto 52);
                tmp_64_reg_4109 <= x_V_6_fu_1365_p2(49 downto 48);
                tmp_65_reg_4115 <= x_V_6_fu_1365_p2(45 downto 44);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter2_tmp_57_reg_3723))) then
                tmp_1183_reg_4530 <= tmp_1183_fu_2435_p1;
                tmp_1217_reg_4595 <= tmp_1217_fu_2781_p1;
                tmp_137_reg_4476 <= tmp_186_cast_fu_2349_p2(59 downto 56);
                tmp_138_reg_4482 <= tmp_186_cast_fu_2349_p2(51 downto 48);
                tmp_139_reg_4489 <= tmp_186_cast_fu_2349_p2(43 downto 40);
                tmp_140_reg_4497 <= tmp_186_cast_fu_2349_p2(35 downto 32);
                tmp_141_reg_4505 <= tmp_186_cast_fu_2349_p2(27 downto 24);
                tmp_142_reg_4513 <= tmp_186_cast_fu_2349_p2(19 downto 16);
                tmp_143_reg_4521 <= tmp_186_cast_fu_2349_p2(11 downto 8);
                tmp_180_reg_4541 <= tmp_186_1_cast_fu_2695_p2(59 downto 56);
                tmp_181_reg_4547 <= tmp_186_1_cast_fu_2695_p2(51 downto 48);
                tmp_182_reg_4554 <= tmp_186_1_cast_fu_2695_p2(43 downto 40);
                tmp_183_reg_4562 <= tmp_186_1_cast_fu_2695_p2(35 downto 32);
                tmp_184_reg_4570 <= tmp_186_1_cast_fu_2695_p2(27 downto 24);
                tmp_185_reg_4578 <= tmp_186_1_cast_fu_2695_p2(19 downto 16);
                tmp_186_reg_4586 <= tmp_186_1_cast_fu_2695_p2(11 downto 8);
                tmp_71_reg_4536 <= tmp_71_fu_2445_p2;
                tmp_88_reg_4601 <= tmp_88_fu_2791_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_1 = ap_reg_pp0_iter4_tmp_57_reg_3723))) then
                tmp_1883_s_reg_4631 <= tmp_1883_s_fu_3169_p2;
                tmp_80_reg_4626 <= tmp_80_fu_3143_p2;
            end if;
        end if;
    end process;
    lhs_V_reg_3643(16) <= '0';
    tmp_s_reg_3658(21 downto 16) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond_fu_554_p2, tmp_57_fu_670_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_57_fu_670_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter6) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_57_fu_670_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(5);
    ap_CS_fsm_state13 <= ap_CS_fsm(6);
    ap_CS_fsm_state14 <= ap_CS_fsm(7);
    ap_CS_fsm_state15 <= ap_CS_fsm(8);
    ap_CS_fsm_state16 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state5_assign_proc : process(tmp_57_fu_670_p2)
    begin
        if ((ap_const_lv1_0 = tmp_57_fu_670_p2)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, exitcond_fu_554_p2)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, exitcond_fu_554_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    best_out_V_1_fu_3553_p3 <= 
        p_Val2_7_reg_454 when (tmp_reg_3635(0) = '1') else 
        best_out_V_fu_3549_p1;
    best_out_V_2_fu_3560_p3 <= 
        best_out_V_1_fu_3553_p3 when (sel_tmp25_demorgan_reg_4682(0) = '1') else 
        p_Val2_7_reg_454;
        best_out_V_fu_3549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_s_63_fu_3540_p4),16));

    bvh_d_index_fu_3521_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_offset_V_reg_3711),32));
    d_o_idx_V_read_read_fu_296_p2 <= d_o_idx_V;

    dmem_0_0_V_address0_assign_proc : process(d_o_idx_V_read_read_fu_296_p2, ap_CS_fsm_state2, exitcond_fu_554_p2, dmem_0_0_V_addr_reg_3683, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state16, tmp_56_fu_589_p1, tmp_52_fu_605_p2, tmp_59_fu_695_p1, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dmem_0_0_V_address0 <= dmem_0_0_V_addr_reg_3683;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            dmem_0_0_V_address0 <= tmp_59_fu_695_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_52_fu_605_p2) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_0))) then 
            dmem_0_0_V_address0 <= ap_const_lv32_0(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_0))) then 
            dmem_0_0_V_address0 <= tmp_56_fu_589_p1(10 - 1 downto 0);
        else 
            dmem_0_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    dmem_0_0_V_ce0_assign_proc : process(d_o_idx_V_read_read_fu_296_p2, ap_CS_fsm_state2, exitcond_fu_554_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state16, tmp_52_fu_605_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_52_fu_605_p2) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_0)))) then 
            dmem_0_0_V_ce0 <= ap_const_logic_1;
        else 
            dmem_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_0_0_V_d0_assign_proc : process(d_o_idx_V_read_read_fu_296_p2, ap_CS_fsm_state2, exitcond_fu_554_p2, ap_CS_fsm_state16, tmp_52_fu_605_p2, o_word_V_3_fu_3573_p3, p_Result_9_fu_610_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dmem_0_0_V_d0 <= o_word_V_3_fu_3573_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_52_fu_605_p2) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_0))) then 
            dmem_0_0_V_d0 <= p_Result_9_fu_610_p3;
        else 
            dmem_0_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dmem_0_0_V_we0_assign_proc : process(d_o_idx_V_read_read_fu_296_p2, ap_CS_fsm_state2, tmp_1149_reg_3676, exitcond_fu_554_p2, ap_CS_fsm_state16, tmp_52_fu_605_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_52_fu_605_p2) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_0) and (tmp_1149_reg_3676 = ap_const_lv1_0)))) then 
            dmem_0_0_V_we0 <= ap_const_logic_1;
        else 
            dmem_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_0_1_V_address0_assign_proc : process(ap_CS_fsm_state2, dmem_0_1_V_addr_reg_3688, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state16, tmp_56_fu_589_p1, tmp_59_fu_695_p1, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dmem_0_1_V_address0 <= dmem_0_1_V_addr_reg_3688;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            dmem_0_1_V_address0 <= tmp_59_fu_695_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dmem_0_1_V_address0 <= tmp_56_fu_589_p1(10 - 1 downto 0);
        else 
            dmem_0_1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    dmem_0_1_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            dmem_0_1_V_ce0 <= ap_const_logic_1;
        else 
            dmem_0_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dmem_0_1_V_d0 <= o_word_V_3_fu_3573_p3;

    dmem_0_1_V_we0_assign_proc : process(d_o_idx_V_read_read_fu_296_p2, tmp_1149_reg_3676, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_0) and (tmp_1149_reg_3676 = ap_const_lv1_1))) then 
            dmem_0_1_V_we0 <= ap_const_logic_1;
        else 
            dmem_0_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_1_0_V_address0_assign_proc : process(ap_CS_fsm_state2, dmem_1_0_V_addr_reg_3693, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state16, tmp_59_fu_695_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            dmem_1_0_V_address0 <= tmp_59_fu_695_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            dmem_1_0_V_address0 <= dmem_1_0_V_addr_reg_3693;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dmem_1_0_V_address0 <= ap_const_lv32_0(10 - 1 downto 0);
        else 
            dmem_1_0_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    dmem_1_0_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            dmem_1_0_V_ce0 <= ap_const_logic_1;
        else 
            dmem_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_1_0_V_d0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state16, o_word_V_3_fu_3573_p3, p_Result_9_fu_610_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dmem_1_0_V_d0 <= o_word_V_3_fu_3573_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dmem_1_0_V_d0 <= p_Result_9_fu_610_p3;
        else 
            dmem_1_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dmem_1_0_V_we0_assign_proc : process(d_o_idx_V_read_read_fu_296_p2, ap_CS_fsm_state2, tmp_1149_reg_3676, exitcond_fu_554_p2, ap_CS_fsm_state16, tmp_52_fu_605_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (exitcond_fu_554_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = tmp_52_fu_605_p2) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_1149_reg_3676 = ap_const_lv1_0) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_1)))) then 
            dmem_1_0_V_we0 <= ap_const_logic_1;
        else 
            dmem_1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dmem_1_1_V_address0_assign_proc : process(dmem_1_1_V_addr_reg_3698, ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state16, tmp_59_fu_695_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            dmem_1_1_V_address0 <= tmp_59_fu_695_p1(10 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            dmem_1_1_V_address0 <= dmem_1_1_V_addr_reg_3698;
        else 
            dmem_1_1_V_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    dmem_1_1_V_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            dmem_1_1_V_ce0 <= ap_const_logic_1;
        else 
            dmem_1_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dmem_1_1_V_d0 <= o_word_V_3_fu_3573_p3;

    dmem_1_1_V_we0_assign_proc : process(d_o_idx_V_read_read_fu_296_p2, tmp_1149_reg_3676, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) and (tmp_1149_reg_3676 = ap_const_lv1_1) and (d_o_idx_V_read_read_fu_296_p2 = ap_const_lv1_1))) then 
            dmem_1_1_V_we0 <= ap_const_logic_1;
        else 
            dmem_1_1_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_fu_554_p2 <= "1" when (p_s_reg_478 = n_outputs) else "0";
    i_V_fu_719_p2 <= std_logic_vector(unsigned(ap_const_lv16_80) + unsigned(p_5_reg_514));
    in_wrd_V_0_phi_fu_725_p3 <= 
        dmem_1_0_V_q0 when (d_i_idx_V(0) = '1') else 
        dmem_0_0_V_q0;
    in_wrd_V_1_phi_fu_994_p3 <= 
        dmem_1_1_V_q0 when (d_i_idx_V(0) = '1') else 
        dmem_0_1_V_q0;

    kh_mem_V_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14, tmp_91_fu_3243_p1, tmp_89_fu_3284_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            kh_mem_V_address0 <= tmp_89_fu_3284_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            kh_mem_V_address0 <= tmp_91_fu_3243_p1(6 - 1 downto 0);
        else 
            kh_mem_V_address0 <= "XXXXXX";
        end if; 
    end process;


    kh_mem_V_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            kh_mem_V_ce0 <= ap_const_logic_1;
        else 
            kh_mem_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    kh_off_V_1_fu_3248_p1 <= p_s_reg_478(1 - 1 downto 0);
    kh_off_V_fu_3308_p1 <= p_s_reg_478(2 - 1 downto 0);
    ki_V_2_fu_3266_p3 <= 
        loc_V_8_fu_3256_p4 when (kh_off_V_1_fu_3248_p1(0) = '1') else 
        loc_V_7_fu_3252_p1;
    lhs_V_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_index_V),17));
    loc_V_10_fu_3406_p4 <= kh_mem_V_q0(47 downto 32);
    loc_V_11_fu_3416_p4 <= kh_mem_V_q0(63 downto 48);
    loc_V_7_fu_3252_p1 <= kh_mem_V_q0(16 - 1 downto 0);
    loc_V_8_fu_3256_p4 <= kh_mem_V_q0(47 downto 32);
    loc_V_9_fu_3328_p4 <= kh_mem_V_q0(31 downto 16);
    loc_V_fu_3318_p1 <= kh_mem_V_q0(16 - 1 downto 0);
    nc_V_4_fu_3496_p3 <= 
        newSel_fu_3474_p3 when (or_cond_fu_3482_p2(0) = '1') else 
        newSel1_fu_3488_p3;
    newSel1_fu_3488_p3 <= 
        loc_V_fu_3318_p1 when (tmp_90_fu_3312_p2(0) = '1') else 
        loc_V_11_fu_3416_p4;
    newSel_fu_3474_p3 <= 
        loc_V_10_fu_3406_p4 when (sel_tmp18_fu_3468_p2(0) = '1') else 
        loc_V_9_fu_3328_p4;
    next_mul_fu_549_p2 <= std_logic_vector(unsigned(phi_mul_reg_490) + unsigned(tmp_s_reg_3658));
    not_s_fu_3504_p2 <= "1" when (signed(p_Val2_3_reg_502) < signed(nc_V_4_fu_3496_p3)) else "0";
    o_V_fu_559_p2 <= std_logic_vector(unsigned(p_s_reg_478) + unsigned(ap_const_lv16_1));
    o_offset_V_fu_636_p2 <= std_logic_vector(unsigned(tmp_1148_fu_632_p1) + unsigned(tmp_1147_reg_3648));
    o_word_V_2_fu_3567_p3 <= 
        p_Result_s_fu_3527_p4 when (tmp_reg_3635(0) = '1') else 
        o_word_V_4_reg_3716;
    o_word_V_3_fu_3573_p3 <= 
        o_word_V_2_fu_3567_p3 when (sel_tmp25_demorgan_reg_4682(0) = '1') else 
        o_word_V_4_reg_3716;
    o_word_V_4_fu_662_p3 <= 
        dmem_1_1_V_q0 when (sel_tmp6_fu_658_p2(0) = '1') else 
        sel_tmp5_fu_651_p3;
    or_cond_fu_3482_p2 <= (sel_tmp18_fu_3468_p2 or sel_tmp13_fu_3450_p2);
    p_0856_s_fu_703_p4 <= r_V_7_fu_679_p2(21 downto 7);
    p_Repl2_s_fu_3524_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(not_s_reg_4677),64));
    p_Result_9_fu_610_p3 <= (ap_const_lv56_0 & p_Val2_s_reg_466);
    
    p_Result_s_fu_3527_p4_proc : process(o_word_V_4_reg_3716, bvh_d_index_fu_3521_p1, p_Repl2_s_fu_3524_p1)
    variable result: std_logic_vector(0 downto 0);
    begin
        p_Result_s_fu_3527_p4 <= o_word_V_4_reg_3716;
        if to_integer(unsigned(bvh_d_index_fu_3521_p1)) >= o_word_V_4_reg_3716'low and to_integer(unsigned(bvh_d_index_fu_3521_p1)) <= o_word_V_4_reg_3716'high then
            result(0) := '0';
            for i in p_Repl2_s_fu_3524_p1'range loop
                result(0) := result(0) or p_Repl2_s_fu_3524_p1(i);
            end loop;
            p_Result_s_fu_3527_p4(to_integer(unsigned(bvh_d_index_fu_3521_p1))) <= result(0);
        end if;
    end process;

    p_Val2_2_fu_3384_p2 <= std_logic_vector(signed(tmp_104_cast_fu_3380_p1) + signed(tmp_96_fu_3344_p1));
    p_Val2_6_fu_3390_p4 <= p_Val2_2_fu_3384_p2(33 downto 14);
    p_Val2_s_63_fu_3540_p4 <= p_Val2_2_reg_4672(33 downto 20);
        p_cast_fu_3223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_108_fu_3217_p2),16));

    phitmp_1_cast_fu_3203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_189_1_fu_3196_p3),9));
    phitmp_cast_fu_3182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_81_fu_3175_p3),9));
    prediction_V_1_fu_3583_p3 <= 
        p_Val2_s_reg_466 when (tmp_reg_3635(0) = '1') else 
        prediction_V_fu_3536_p1;
    prediction_V_2_fu_3590_p3 <= 
        prediction_V_1_fu_3583_p3 when (sel_tmp25_demorgan_reg_4682(0) = '1') else 
        p_Val2_s_reg_466;
    prediction_V_fu_3536_p1 <= p_s_reg_478(8 - 1 downto 0);
    r_V_10_fu_3233_p4 <= p_s_reg_478(15 downto 1);
    r_V_1_cast_fu_1361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_1263_p64),64));
    r_V_1_fu_1263_p64 <= ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((tmp_1150_reg_3767 & ap_const_lv1_0) & tmp_1151_reg_3772) & ap_const_lv1_0) & tmp_1152_reg_3777) & ap_const_lv1_0) & tmp_1153_reg_3782) & ap_const_lv1_0) & tmp_1154_reg_3787) & ap_const_lv1_0) & tmp_1155_reg_3792) & ap_const_lv1_0) & tmp_1156_reg_3797) & ap_const_lv1_0) & tmp_1157_reg_3802) & ap_const_lv1_0) & tmp_1158_reg_3807) & ap_const_lv1_0) & tmp_1159_reg_3812) & ap_const_lv1_0) & tmp_1160_reg_3817) & ap_const_lv1_0) & tmp_1161_reg_3822) & ap_const_lv1_0) & tmp_1162_reg_3827) & ap_const_lv1_0) & tmp_1163_reg_3832) & ap_const_lv1_0) & tmp_1164_reg_3837) & ap_const_lv1_0) & tmp_1165_reg_3842) & ap_const_lv1_0) & tmp_1166_reg_3847) & ap_const_lv1_0) & tmp_1167_reg_3852) & ap_const_lv1_0) & tmp_1168_reg_3857) & ap_const_lv1_0) & tmp_1169_reg_3862) & ap_const_lv1_0) & tmp_1170_reg_3867) & ap_const_lv1_0) & tmp_1171_reg_3872) & ap_const_lv1_0) & tmp_1172_reg_3877) & ap_const_lv1_0) & tmp_1173_reg_3882) & ap_const_lv1_0) & tmp_1174_reg_3887) & ap_const_lv1_0) & tmp_1175_reg_3892) & ap_const_lv1_0) & tmp_1176_reg_3897) & ap_const_lv1_0) & tmp_1177_reg_3902) & ap_const_lv1_0) & tmp_1178_reg_3907) & ap_const_lv1_0) & tmp_1179_reg_3912) & ap_const_lv1_0) & tmp_1180_reg_3917) & ap_const_lv1_0) & tmp_1181_reg_3922);
    r_V_2_cast_fu_2155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_2_fu_2105_p32),63));
    r_V_2_fu_2105_p32 <= ((((((((((((((((((((((((((((((tmp_61_reg_4092 & ap_const_lv2_0) & tmp_62_reg_4097) & ap_const_lv2_0) & tmp_63_reg_4103) & ap_const_lv2_0) & tmp_64_reg_4109) & ap_const_lv2_0) & tmp_65_reg_4115) & ap_const_lv2_0) & tmp_109_reg_4121) & ap_const_lv2_0) & tmp_110_reg_4127) & ap_const_lv2_0) & tmp_111_reg_4133) & ap_const_lv2_0) & tmp_112_reg_4139) & ap_const_lv2_0) & tmp_113_reg_4145) & ap_const_lv2_0) & tmp_114_reg_4151) & ap_const_lv2_0) & tmp_115_reg_4157) & ap_const_lv2_0) & tmp_116_reg_4163) & ap_const_lv2_0) & tmp_117_reg_4169) & ap_const_lv2_0) & tmp_118_reg_4175) & ap_const_lv2_0) & tmp_1182_reg_4181);
    r_V_3_cast_fu_2209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_3_fu_2159_p32),63));
    r_V_3_fu_2159_p32 <= ((((((((((((((((((((((((((((((tmp_119_reg_4188 & ap_const_lv2_0) & tmp_120_reg_4193) & ap_const_lv2_0) & tmp_121_reg_4199) & ap_const_lv2_0) & tmp_122_reg_4205) & ap_const_lv2_0) & tmp_123_reg_4211) & ap_const_lv2_0) & tmp_124_reg_4217) & ap_const_lv2_0) & tmp_125_reg_4223) & ap_const_lv2_0) & tmp_126_reg_4229) & ap_const_lv2_0) & tmp_127_reg_4235) & ap_const_lv2_0) & tmp_128_reg_4241) & ap_const_lv2_0) & tmp_129_reg_4247) & ap_const_lv2_0) & tmp_130_reg_4253) & ap_const_lv2_0) & tmp_131_reg_4259) & ap_const_lv2_0) & tmp_132_reg_4265) & ap_const_lv2_0) & tmp_133_reg_4271) & ap_const_lv2_0) & tmp_134_reg_4277);
    r_V_44_1_cast_fu_1782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_44_1_fu_1684_p64),64));
    r_V_44_1_fu_1684_p64 <= ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((tmp_1184_reg_3932 & ap_const_lv1_0) & tmp_1185_reg_3937) & ap_const_lv1_0) & tmp_1186_reg_3942) & ap_const_lv1_0) & tmp_1187_reg_3947) & ap_const_lv1_0) & tmp_1188_reg_3952) & ap_const_lv1_0) & tmp_1189_reg_3957) & ap_const_lv1_0) & tmp_1190_reg_3962) & ap_const_lv1_0) & tmp_1191_reg_3967) & ap_const_lv1_0) & tmp_1192_reg_3972) & ap_const_lv1_0) & tmp_1193_reg_3977) & ap_const_lv1_0) & tmp_1194_reg_3982) & ap_const_lv1_0) & tmp_1195_reg_3987) & ap_const_lv1_0) & tmp_1196_reg_3992) & ap_const_lv1_0) & tmp_1197_reg_3997) & ap_const_lv1_0) & tmp_1198_reg_4002) & ap_const_lv1_0) & tmp_1199_reg_4007) & ap_const_lv1_0) & tmp_1200_reg_4012) & ap_const_lv1_0) & tmp_1201_reg_4017) & ap_const_lv1_0) & tmp_1202_reg_4022) & ap_const_lv1_0) & tmp_1203_reg_4027) & ap_const_lv1_0) & tmp_1204_reg_4032) & ap_const_lv1_0) & tmp_1205_reg_4037) & ap_const_lv1_0) & tmp_1206_reg_4042) & ap_const_lv1_0) & tmp_1207_reg_4047) & ap_const_lv1_0) & tmp_1208_reg_4052) & ap_const_lv1_0) & tmp_1209_reg_4057) & ap_const_lv1_0) & tmp_1210_reg_4062) & ap_const_lv1_0) & tmp_1211_reg_4067) & ap_const_lv1_0) & tmp_1212_reg_4072) & ap_const_lv1_0) & tmp_1213_reg_4077) & ap_const_lv1_0) & tmp_1214_reg_4082) & ap_const_lv1_0) & tmp_1215_reg_4087);
    r_V_45_1_cast_fu_2501_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_45_1_fu_2451_p32),63));
    r_V_45_1_fu_2451_p32 <= ((((((((((((((((((((((((((((((tmp_147_reg_4284 & ap_const_lv2_0) & tmp_148_reg_4289) & ap_const_lv2_0) & tmp_149_reg_4295) & ap_const_lv2_0) & tmp_150_reg_4301) & ap_const_lv2_0) & tmp_151_reg_4307) & ap_const_lv2_0) & tmp_152_reg_4313) & ap_const_lv2_0) & tmp_153_reg_4319) & ap_const_lv2_0) & tmp_154_reg_4325) & ap_const_lv2_0) & tmp_155_reg_4331) & ap_const_lv2_0) & tmp_156_reg_4337) & ap_const_lv2_0) & tmp_157_reg_4343) & ap_const_lv2_0) & tmp_158_reg_4349) & ap_const_lv2_0) & tmp_159_reg_4355) & ap_const_lv2_0) & tmp_160_reg_4361) & ap_const_lv2_0) & tmp_161_reg_4367) & ap_const_lv2_0) & tmp_1216_reg_4373);
    r_V_46_1_cast_fu_2555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_46_1_fu_2505_p32),63));
    r_V_46_1_fu_2505_p32 <= ((((((((((((((((((((((((((((((tmp_162_reg_4380 & ap_const_lv2_0) & tmp_163_reg_4385) & ap_const_lv2_0) & tmp_164_reg_4391) & ap_const_lv2_0) & tmp_165_reg_4397) & ap_const_lv2_0) & tmp_166_reg_4403) & ap_const_lv2_0) & tmp_167_reg_4409) & ap_const_lv2_0) & tmp_168_reg_4415) & ap_const_lv2_0) & tmp_169_reg_4421) & ap_const_lv2_0) & tmp_170_reg_4427) & ap_const_lv2_0) & tmp_171_reg_4433) & ap_const_lv2_0) & tmp_172_reg_4439) & ap_const_lv2_0) & tmp_173_reg_4445) & ap_const_lv2_0) & tmp_174_reg_4451) & ap_const_lv2_0) & tmp_175_reg_4457) & ap_const_lv2_0) & tmp_176_reg_4463) & ap_const_lv2_0) & tmp_177_reg_4469);
    r_V_47_1_cast_fu_3017_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_47_1_fu_2990_p14),61));
    r_V_47_1_fu_2990_p14 <= ((((((((((((tmp_180_reg_4541 & ap_const_lv4_0) & tmp_181_reg_4547) & ap_const_lv4_0) & tmp_182_reg_4554) & ap_const_lv4_0) & tmp_183_reg_4562) & ap_const_lv4_0) & tmp_184_reg_4570) & ap_const_lv4_0) & tmp_185_reg_4578) & ap_const_lv4_0) & tmp_186_reg_4586);
    r_V_48_1_cast_fu_3093_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_189_fu_3083_p4),47));
    r_V_49_1_fu_1001_p2 <= (wt_mem_1_V_q0 xor in_wrd_V_1_phi_fu_994_p3);
    r_V_4_cast_fu_2854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_fu_2827_p14),61));
    r_V_4_fu_2827_p14 <= ((((((((((((tmp_137_reg_4476 & ap_const_lv4_0) & tmp_138_reg_4482) & ap_const_lv4_0) & tmp_139_reg_4489) & ap_const_lv4_0) & tmp_140_reg_4497) & ap_const_lv4_0) & tmp_141_reg_4505) & ap_const_lv4_0) & tmp_142_reg_4513) & ap_const_lv4_0) & tmp_143_reg_4521);
    r_V_5_cast_fu_2930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_146_fu_2920_p4),47));
    r_V_7_fu_679_p2 <= std_logic_vector(unsigned(rhs_V_4_cast_fu_675_p1) + unsigned(phi_mul_reg_490));
    r_V_8_fu_3274_p4 <= p_s_reg_478(15 downto 2);
    r_V_9_fu_685_p4 <= p_5_reg_514(15 downto 7);
    r_V_fu_574_p2 <= std_logic_vector(unsigned(rhs_V_fu_565_p1) + unsigned(lhs_V_reg_3643));
    r_V_s_fu_732_p2 <= (wt_mem_0_V_q0 xor in_wrd_V_0_phi_fu_725_p3);
    rhs_V_4_cast_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_5_reg_514),22));
    rhs_V_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_s_reg_478),17));
    sel_tmp12_fu_3444_p2 <= (tmp_90_fu_3312_p2 xor ap_const_lv1_1);
    sel_tmp13_fu_3450_p2 <= (tmp_92_fu_3322_p2 and sel_tmp12_fu_3444_p2);
    sel_tmp17_demorgan_fu_3456_p2 <= (tmp_90_fu_3312_p2 or tmp_92_fu_3322_p2);
    sel_tmp17_fu_3462_p2 <= (sel_tmp17_demorgan_fu_3456_p2 xor ap_const_lv1_1);
    sel_tmp18_fu_3468_p2 <= (tmp_93_fu_3338_p2 and sel_tmp17_fu_3462_p2);
    sel_tmp1_fu_620_p2 <= (tmp_1149_reg_3676 and sel_tmp_reg_3653);
    sel_tmp25_demorgan_fu_3516_p2 <= (tmp47_fu_3510_p2 or tmp_reg_3635);
    sel_tmp2_fu_624_p3 <= 
        dmem_0_1_V_q0 when (sel_tmp1_fu_620_p2(0) = '1') else 
        dmem_0_0_V_q0;
    sel_tmp3_fu_641_p2 <= (tmp_1149_reg_3676 xor ap_const_lv1_1);
    sel_tmp4_fu_646_p2 <= (d_o_idx_V and sel_tmp3_fu_641_p2);
    sel_tmp5_fu_651_p3 <= 
        dmem_1_0_V_q0 when (sel_tmp4_fu_646_p2(0) = '1') else 
        sel_tmp2_reg_3706;
    sel_tmp6_fu_658_p2 <= (tmp_1149_reg_3676 and d_o_idx_V);
    sel_tmp_fu_539_p2 <= (d_o_idx_V xor ap_const_lv1_1);
    sum_V_1_fu_3227_p2 <= std_logic_vector(signed(p_cast_fu_3223_p1) + signed(p_Val2_3_reg_502));
    tmp41_fu_2439_p2 <= std_logic_vector(unsigned(tmp_70_fu_2355_p4) + unsigned(tmp_1233_cast_fu_2323_p1));
    tmp44_fu_2785_p2 <= std_logic_vector(unsigned(tmp_87_fu_2701_p4) + unsigned(tmp_1248_cast_fu_2669_p1));
    tmp47_fu_3510_p2 <= (tmp_99_fu_3400_p2 or tmp_102_fu_3438_p2);
    tmp_100_fu_3149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter4_tmp_88_reg_4601),7));
    tmp_101_fu_3430_p3 <= (p_Val2_7_reg_454 & ap_const_lv6_0);
    tmp_102_fu_3438_p2 <= "1" when (signed(tmp_107_cast_fu_3426_p1) > signed(tmp_101_fu_3430_p3)) else "0";
    tmp_103_fu_3152_p3 <= (ap_const_lv3_0 & ap_reg_pp0_iter4_tmp_186_reg_4586);
        tmp_104_cast_fu_3380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_97_fu_3372_p3),37));

    tmp_106_fu_3159_p2 <= std_logic_vector(unsigned(tmp_105_reg_4621) + unsigned(tmp_104_reg_4616));
        tmp_107_cast_fu_3426_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_Val2_6_fu_3390_p4),22));

    tmp_107_fu_3163_p2 <= std_logic_vector(unsigned(tmp_103_fu_3152_p3) + unsigned(tmp_100_fu_3149_p1));
    tmp_108_fu_3217_p2 <= std_logic_vector(signed(tmp_190_cast_fu_3192_p1) + signed(tmp_190_1_cast_fu_3213_p1));
    tmp_1147_fu_535_p1 <= o_index_V(6 - 1 downto 0);
    tmp_1148_fu_632_p1 <= p_s_reg_478(6 - 1 downto 0);
    tmp_1182_fu_1520_p1 <= x_V_6_fu_1365_p2(2 - 1 downto 0);
    tmp_1183_fu_2435_p1 <= tmp_186_cast_fu_2349_p2(4 - 1 downto 0);
    tmp_1216_fu_1941_p1 <= x_V_6_1_fu_1786_p2(2 - 1 downto 0);
    tmp_1217_fu_2781_p1 <= tmp_186_1_cast_fu_2695_p2(4 - 1 downto 0);
    tmp_1222_fu_3289_p1 <= p_Val2_3_reg_502(10 - 1 downto 0);
    tmp_1233_cast_fu_2323_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1182_reg_4181),4));
    tmp_1234_cast_fu_2326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_134_reg_4277),4));
    tmp_1248_cast_fu_2669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1216_reg_4373),4));
    tmp_1249_cast_fu_2672_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_177_reg_4469),4));
    tmp_135_fu_2311_p2 <= std_logic_vector(unsigned(r_V_3_fu_2159_p32) + unsigned(r_V_2_fu_2105_p32));
    tmp_136_fu_2329_p4 <= x_V_fu_2317_p2(62 downto 4);
    tmp_144_fu_2850_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_4_fu_2827_p14),60));
    tmp_145_fu_2902_p2 <= std_logic_vector(unsigned(tmp_144_fu_2850_p1) + unsigned(x_V_2_fu_2797_p16));
    tmp_146_fu_2920_p4 <= x_V_3_fu_2908_p2(60 downto 16);
    tmp_178_fu_2657_p2 <= std_logic_vector(unsigned(r_V_46_1_fu_2505_p32) + unsigned(r_V_45_1_fu_2451_p32));
    tmp_179_fu_2675_p4 <= x_V_1_fu_2663_p2(62 downto 4);
    tmp_186_1_cast_fu_2695_p2 <= std_logic_vector(unsigned(tmp_86_fu_2689_p2) + unsigned(tmp_85_fu_2685_p1));
    tmp_186_cast_fu_2349_p2 <= std_logic_vector(unsigned(tmp_69_fu_2343_p2) + unsigned(tmp_68_fu_2339_p1));
    tmp_187_fu_3013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_47_1_fu_2990_p14),60));
    tmp_1883_s_fu_3169_p2 <= std_logic_vector(unsigned(tmp_106_fu_3159_p2) + unsigned(tmp_107_fu_3163_p2));
    tmp_188_fu_3065_p2 <= std_logic_vector(unsigned(tmp_187_fu_3013_p1) + unsigned(x_V_2_1_fu_2960_p16));
    tmp_189_1_fu_3196_p3 <= (tmp_1883_s_reg_4631 & ap_const_lv1_0);
    tmp_189_fu_3083_p4 <= x_V_3_1_fu_3071_p2(60 downto 16);
        tmp_190_1_cast_fu_3213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_190_1_fu_3207_p2),10));

    tmp_190_1_fu_3207_p2 <= std_logic_vector(unsigned(ap_const_lv9_40) - unsigned(phitmp_1_cast_fu_3203_p1));
        tmp_190_cast_fu_3192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_82_fu_3186_p2),10));

    tmp_190_fu_3347_p4 <= kh_word_V_2_reg_4651(63 downto 48);
    tmp_191_fu_3356_p4 <= kh_word_V_2_reg_4651(31 downto 16);
    tmp_192_fu_3365_p3 <= 
        tmp_190_fu_3347_p4 when (kh_off_V_1_reg_4646(0) = '1') else 
        tmp_191_fu_3356_p4;
    tmp_52_fu_605_p2 <= "1" when (layer_type_V = ap_const_lv2_3) else "0";
    tmp_54_fu_569_p2 <= std_logic_vector(unsigned(o_index_V) + unsigned(p_s_reg_478));
    tmp_55_fu_579_p4 <= r_V_fu_574_p2(16 downto 7);
    tmp_56_fu_589_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_55_fu_579_p4),32));
    tmp_57_fu_670_p2 <= "1" when (unsigned(p_5_reg_514) < unsigned(n_inputs)) else "0";
    tmp_59_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_9_fu_685_p4),32));
    tmp_60_fu_713_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0856_s_fu_703_p4),32));
    tmp_66_fu_2213_p31 <= (((((((((((((((((((((((((((((ap_const_lv2_0 & tmp_62_reg_4097) & ap_const_lv2_0) & tmp_63_reg_4103) & ap_const_lv2_0) & tmp_64_reg_4109) & ap_const_lv2_0) & tmp_65_reg_4115) & ap_const_lv2_0) & tmp_109_reg_4121) & ap_const_lv2_0) & tmp_110_reg_4127) & ap_const_lv2_0) & tmp_111_reg_4133) & ap_const_lv2_0) & tmp_112_reg_4139) & ap_const_lv2_0) & tmp_113_reg_4145) & ap_const_lv2_0) & tmp_114_reg_4151) & ap_const_lv2_0) & tmp_115_reg_4157) & ap_const_lv2_0) & tmp_116_reg_4163) & ap_const_lv2_0) & tmp_117_reg_4169) & ap_const_lv2_0) & tmp_118_reg_4175) & ap_const_lv2_0) & tmp_1182_reg_4181);
    tmp_67_fu_2262_p31 <= (((((((((((((((((((((((((((((ap_const_lv2_0 & tmp_120_reg_4193) & ap_const_lv2_0) & tmp_121_reg_4199) & ap_const_lv2_0) & tmp_122_reg_4205) & ap_const_lv2_0) & tmp_123_reg_4211) & ap_const_lv2_0) & tmp_124_reg_4217) & ap_const_lv2_0) & tmp_125_reg_4223) & ap_const_lv2_0) & tmp_126_reg_4229) & ap_const_lv2_0) & tmp_127_reg_4235) & ap_const_lv2_0) & tmp_128_reg_4241) & ap_const_lv2_0) & tmp_129_reg_4247) & ap_const_lv2_0) & tmp_130_reg_4253) & ap_const_lv2_0) & tmp_131_reg_4259) & ap_const_lv2_0) & tmp_132_reg_4265) & ap_const_lv2_0) & tmp_133_reg_4271) & ap_const_lv2_0) & tmp_134_reg_4277);
    tmp_68_fu_2339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_136_fu_2329_p4),60));
    tmp_69_fu_2343_p2 <= std_logic_vector(unsigned(tmp_67_fu_2262_p31) + unsigned(tmp_66_fu_2213_p31));
    tmp_70_fu_2355_p4 <= tmp_135_fu_2311_p2(7 downto 4);
    tmp_71_fu_2445_p2 <= std_logic_vector(unsigned(tmp_1234_cast_fu_2326_p1) + unsigned(tmp41_fu_2439_p2));
    tmp_72_fu_2858_p13 <= (((((((((((ap_const_lv3_0 & tmp_139_reg_4489) & ap_const_lv4_0) & tmp_140_reg_4497) & ap_const_lv4_0) & tmp_141_reg_4505) & ap_const_lv4_0) & tmp_142_reg_4513) & ap_const_lv4_0) & tmp_143_reg_4521) & ap_const_lv4_0) & tmp_1183_reg_4530);
    tmp_73_fu_2880_p13 <= (((((((((((ap_const_lv3_0 & tmp_138_reg_4482) & ap_const_lv4_0) & tmp_139_reg_4489) & ap_const_lv4_0) & tmp_140_reg_4497) & ap_const_lv4_0) & tmp_141_reg_4505) & ap_const_lv4_0) & tmp_142_reg_4513) & ap_const_lv4_0) & tmp_143_reg_4521);
    tmp_74_fu_3123_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_reg_pp0_iter4_tmp_71_reg_4536),7));
    tmp_75_fu_3126_p3 <= (ap_const_lv3_0 & ap_reg_pp0_iter4_tmp_143_reg_4521);
    tmp_78_fu_3133_p2 <= std_logic_vector(unsigned(tmp_77_reg_4611) + unsigned(tmp_76_reg_4606));
    tmp_79_fu_3137_p2 <= std_logic_vector(unsigned(tmp_75_fu_3126_p3) + unsigned(tmp_74_fu_3123_p1));
    tmp_80_fu_3143_p2 <= std_logic_vector(unsigned(tmp_78_fu_3133_p2) + unsigned(tmp_79_fu_3137_p2));
    tmp_81_fu_3175_p3 <= (tmp_80_reg_4626 & ap_const_lv1_0);
    tmp_82_fu_3186_p2 <= std_logic_vector(unsigned(ap_const_lv9_40) - unsigned(phitmp_cast_fu_3182_p1));
    tmp_83_fu_2559_p31 <= (((((((((((((((((((((((((((((ap_const_lv2_0 & tmp_148_reg_4289) & ap_const_lv2_0) & tmp_149_reg_4295) & ap_const_lv2_0) & tmp_150_reg_4301) & ap_const_lv2_0) & tmp_151_reg_4307) & ap_const_lv2_0) & tmp_152_reg_4313) & ap_const_lv2_0) & tmp_153_reg_4319) & ap_const_lv2_0) & tmp_154_reg_4325) & ap_const_lv2_0) & tmp_155_reg_4331) & ap_const_lv2_0) & tmp_156_reg_4337) & ap_const_lv2_0) & tmp_157_reg_4343) & ap_const_lv2_0) & tmp_158_reg_4349) & ap_const_lv2_0) & tmp_159_reg_4355) & ap_const_lv2_0) & tmp_160_reg_4361) & ap_const_lv2_0) & tmp_161_reg_4367) & ap_const_lv2_0) & tmp_1216_reg_4373);
    tmp_84_fu_2608_p31 <= (((((((((((((((((((((((((((((ap_const_lv2_0 & tmp_163_reg_4385) & ap_const_lv2_0) & tmp_164_reg_4391) & ap_const_lv2_0) & tmp_165_reg_4397) & ap_const_lv2_0) & tmp_166_reg_4403) & ap_const_lv2_0) & tmp_167_reg_4409) & ap_const_lv2_0) & tmp_168_reg_4415) & ap_const_lv2_0) & tmp_169_reg_4421) & ap_const_lv2_0) & tmp_170_reg_4427) & ap_const_lv2_0) & tmp_171_reg_4433) & ap_const_lv2_0) & tmp_172_reg_4439) & ap_const_lv2_0) & tmp_173_reg_4445) & ap_const_lv2_0) & tmp_174_reg_4451) & ap_const_lv2_0) & tmp_175_reg_4457) & ap_const_lv2_0) & tmp_176_reg_4463) & ap_const_lv2_0) & tmp_177_reg_4469);
    tmp_85_fu_2685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_179_fu_2675_p4),60));
    tmp_86_fu_2689_p2 <= std_logic_vector(unsigned(tmp_84_fu_2608_p31) + unsigned(tmp_83_fu_2559_p31));
    tmp_87_fu_2701_p4 <= tmp_178_fu_2657_p2(7 downto 4);
    tmp_88_fu_2791_p2 <= std_logic_vector(unsigned(tmp_1249_cast_fu_2672_p1) + unsigned(tmp44_fu_2785_p2));
    tmp_89_fu_3284_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_8_fu_3274_p4),32));
    tmp_90_fu_3312_p2 <= "1" when (kh_off_V_fu_3308_p1 = ap_const_lv2_0) else "0";
    tmp_91_fu_3243_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_10_fu_3233_p4),32));
    tmp_92_fu_3322_p2 <= "1" when (kh_off_V_fu_3308_p1 = ap_const_lv2_1) else "0";
    tmp_93_fu_3338_p2 <= "1" when (kh_off_V_fu_3308_p1 = ap_const_lv2_2) else "0";
    tmp_94_fu_3021_p13 <= (((((((((((ap_const_lv3_0 & tmp_182_reg_4554) & ap_const_lv4_0) & tmp_183_reg_4562) & ap_const_lv4_0) & tmp_184_reg_4570) & ap_const_lv4_0) & tmp_185_reg_4578) & ap_const_lv4_0) & tmp_186_reg_4586) & ap_const_lv4_0) & tmp_1217_reg_4595);
    tmp_95_fu_3293_p3 <= (tmp_1222_fu_3289_p1 & ap_const_lv10_0);
    tmp_96_fu_3344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_1_reg_4667),37));
    tmp_97_fu_3372_p3 <= (tmp_192_fu_3365_p3 & ap_const_lv12_0);
    tmp_98_fu_3043_p13 <= (((((((((((ap_const_lv3_0 & tmp_181_reg_4547) & ap_const_lv4_0) & tmp_182_reg_4554) & ap_const_lv4_0) & tmp_183_reg_4562) & ap_const_lv4_0) & tmp_184_reg_4570) & ap_const_lv4_0) & tmp_185_reg_4578) & ap_const_lv4_0) & tmp_186_reg_4586);
    tmp_99_fu_3400_p2 <= "1" when (p_s_reg_478 = ap_const_lv16_0) else "0";
    tmp_fu_525_p2 <= "1" when (layer_type_V = ap_const_lv2_2) else "0";
    tmp_s_fu_545_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_inputs),22));
    wt_mem_0_V_address0 <= tmp_60_fu_713_p1(12 - 1 downto 0);

    wt_mem_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            wt_mem_0_V_ce0 <= ap_const_logic_1;
        else 
            wt_mem_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    wt_mem_1_V_address0 <= tmp_60_fu_713_p1(12 - 1 downto 0);

    wt_mem_1_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            wt_mem_1_V_ce0 <= ap_const_logic_1;
        else 
            wt_mem_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    x_V_1_fu_2663_p2 <= std_logic_vector(unsigned(r_V_45_1_cast_fu_2501_p1) + unsigned(r_V_46_1_cast_fu_2555_p1));
    x_V_2_1_cast_fu_2986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_V_2_1_fu_2960_p16),61));
    x_V_2_1_fu_2960_p16 <= ((((((((((((((tmp_180_reg_4541 & ap_const_lv4_0) & tmp_181_reg_4547) & ap_const_lv4_0) & tmp_182_reg_4554) & ap_const_lv4_0) & tmp_183_reg_4562) & ap_const_lv4_0) & tmp_184_reg_4570) & ap_const_lv4_0) & tmp_185_reg_4578) & ap_const_lv4_0) & tmp_186_reg_4586) & ap_const_lv4_0) & tmp_1217_reg_4595);
    x_V_2_cast_fu_2823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_V_2_fu_2797_p16),61));
    x_V_2_fu_2797_p16 <= ((((((((((((((tmp_137_reg_4476 & ap_const_lv4_0) & tmp_138_reg_4482) & ap_const_lv4_0) & tmp_139_reg_4489) & ap_const_lv4_0) & tmp_140_reg_4497) & ap_const_lv4_0) & tmp_141_reg_4505) & ap_const_lv4_0) & tmp_142_reg_4513) & ap_const_lv4_0) & tmp_143_reg_4521) & ap_const_lv4_0) & tmp_1183_reg_4530);
    x_V_3_1_cast_fu_3077_p2 <= std_logic_vector(unsigned(tmp_98_fu_3043_p13) + unsigned(tmp_94_fu_3021_p13));
    x_V_3_1_fu_3071_p2 <= std_logic_vector(unsigned(x_V_2_1_cast_fu_2986_p1) + unsigned(r_V_47_1_cast_fu_3017_p1));
    x_V_3_cast_fu_2914_p2 <= std_logic_vector(unsigned(tmp_73_fu_2880_p13) + unsigned(tmp_72_fu_2858_p13));
    x_V_3_fu_2908_p2 <= std_logic_vector(unsigned(x_V_2_cast_fu_2823_p1) + unsigned(r_V_4_cast_fu_2854_p1));
    x_V_4_1_fu_3097_p2 <= std_logic_vector(unsigned(x_V_3_1_cast_fu_3077_p2) + unsigned(r_V_48_1_cast_fu_3093_p1));
    x_V_4_fu_2934_p2 <= std_logic_vector(unsigned(x_V_3_cast_fu_2914_p2) + unsigned(r_V_5_cast_fu_2930_p1));
    x_V_6_1_fu_1786_p2 <= std_logic_vector(unsigned(r_V_49_1_reg_3927) - unsigned(r_V_44_1_cast_fu_1782_p1));
    x_V_6_fu_1365_p2 <= std_logic_vector(unsigned(r_V_s_reg_3762) - unsigned(r_V_1_cast_fu_1361_p1));
    x_V_fu_2317_p2 <= std_logic_vector(unsigned(r_V_2_cast_fu_2155_p1) + unsigned(r_V_3_cast_fu_2209_p1));
end behav;
