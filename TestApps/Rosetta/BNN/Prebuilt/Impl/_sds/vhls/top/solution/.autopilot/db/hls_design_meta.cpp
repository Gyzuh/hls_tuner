#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("wt_i_V_dout", 64, hls_in, 0, "ap_fifo", "fifo_data", 4682),
	Port_Property("wt_i_V_empty_n", 1, hls_in, 0, "ap_fifo", "fifo_status", 4682),
	Port_Property("wt_i_V_read", 1, hls_out, 0, "ap_fifo", "fifo_update", 4682),
	Port_Property("kh_i_V_dout", 64, hls_in, 1, "ap_fifo", "fifo_data", 64),
	Port_Property("kh_i_V_empty_n", 1, hls_in, 1, "ap_fifo", "fifo_status", 64),
	Port_Property("kh_i_V_read", 1, hls_out, 1, "ap_fifo", "fifo_update", 64),
	Port_Property("dmem_i_V_dout", 64, hls_in, 2, "ap_fifo", "fifo_data", 3),
	Port_Property("dmem_i_V_empty_n", 1, hls_in, 2, "ap_fifo", "fifo_status", 3),
	Port_Property("dmem_i_V_read", 1, hls_out, 2, "ap_fifo", "fifo_update", 3),
	Port_Property("dmem_o_V_din", 64, hls_out, 3, "ap_fifo", "fifo_data", 2),
	Port_Property("dmem_o_V_full_n", 1, hls_in, 3, "ap_fifo", "fifo_status", 2),
	Port_Property("dmem_o_V_write", 1, hls_out, 3, "ap_fifo", "fifo_update", 2),
	Port_Property("n_inputs_V", 16, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("n_outputs_V", 16, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("input_words_V", 16, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("output_words_V", 16, hls_in, 7, "ap_none", "in_data", 1),
	Port_Property("layer_mode_V", 3, hls_in, 8, "ap_none", "in_data", 1),
	Port_Property("dmem_mode_V", 1, hls_in, 9, "ap_none", "in_data", 1),
	Port_Property("width_mode_V", 2, hls_in, 10, "ap_none", "in_data", 1),
	Port_Property("norm_mode_V", 2, hls_in, 11, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "top";
