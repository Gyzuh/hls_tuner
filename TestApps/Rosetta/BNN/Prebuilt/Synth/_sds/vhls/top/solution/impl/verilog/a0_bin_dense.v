// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module a0_bin_dense (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        wt_mem_0_V_address0,
        wt_mem_0_V_ce0,
        wt_mem_0_V_q0,
        wt_mem_1_V_address0,
        wt_mem_1_V_ce0,
        wt_mem_1_V_q0,
        kh_mem_V_address0,
        kh_mem_V_ce0,
        kh_mem_V_q0,
        dmem_0_0_V_address0,
        dmem_0_0_V_ce0,
        dmem_0_0_V_we0,
        dmem_0_0_V_d0,
        dmem_0_0_V_q0,
        dmem_0_1_V_address0,
        dmem_0_1_V_ce0,
        dmem_0_1_V_we0,
        dmem_0_1_V_d0,
        dmem_0_1_V_q0,
        dmem_1_0_V_address0,
        dmem_1_0_V_ce0,
        dmem_1_0_V_we0,
        dmem_1_0_V_d0,
        dmem_1_0_V_q0,
        dmem_1_1_V_address0,
        dmem_1_1_V_ce0,
        dmem_1_1_V_we0,
        dmem_1_1_V_d0,
        dmem_1_1_V_q0,
        layer_type_V,
        d_i_idx_V,
        d_o_idx_V,
        o_index_V,
        n_inputs,
        n_outputs
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_pp0_stage0 = 10'd16;
parameter    ap_ST_fsm_state12 = 10'd32;
parameter    ap_ST_fsm_state13 = 10'd64;
parameter    ap_ST_fsm_state14 = 10'd128;
parameter    ap_ST_fsm_state15 = 10'd256;
parameter    ap_ST_fsm_state16 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] wt_mem_0_V_address0;
output   wt_mem_0_V_ce0;
input  [63:0] wt_mem_0_V_q0;
output  [11:0] wt_mem_1_V_address0;
output   wt_mem_1_V_ce0;
input  [63:0] wt_mem_1_V_q0;
output  [5:0] kh_mem_V_address0;
output   kh_mem_V_ce0;
input  [63:0] kh_mem_V_q0;
output  [9:0] dmem_0_0_V_address0;
output   dmem_0_0_V_ce0;
output   dmem_0_0_V_we0;
output  [63:0] dmem_0_0_V_d0;
input  [63:0] dmem_0_0_V_q0;
output  [9:0] dmem_0_1_V_address0;
output   dmem_0_1_V_ce0;
output   dmem_0_1_V_we0;
output  [63:0] dmem_0_1_V_d0;
input  [63:0] dmem_0_1_V_q0;
output  [9:0] dmem_1_0_V_address0;
output   dmem_1_0_V_ce0;
output   dmem_1_0_V_we0;
output  [63:0] dmem_1_0_V_d0;
input  [63:0] dmem_1_0_V_q0;
output  [9:0] dmem_1_1_V_address0;
output   dmem_1_1_V_ce0;
output   dmem_1_1_V_we0;
output  [63:0] dmem_1_1_V_d0;
input  [63:0] dmem_1_1_V_q0;
input  [1:0] layer_type_V;
input  [0:0] d_i_idx_V;
input  [0:0] d_o_idx_V;
input  [15:0] o_index_V;
input  [15:0] n_inputs;
input  [15:0] n_outputs;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg wt_mem_0_V_ce0;
reg wt_mem_1_V_ce0;
reg[5:0] kh_mem_V_address0;
reg kh_mem_V_ce0;
reg[9:0] dmem_0_0_V_address0;
reg dmem_0_0_V_ce0;
reg dmem_0_0_V_we0;
reg[63:0] dmem_0_0_V_d0;
reg[9:0] dmem_0_1_V_address0;
reg dmem_0_1_V_ce0;
reg dmem_0_1_V_we0;
reg[9:0] dmem_1_0_V_address0;
reg dmem_1_0_V_ce0;
reg dmem_1_0_V_we0;
reg[63:0] dmem_1_0_V_d0;
reg[9:0] dmem_1_1_V_address0;
reg dmem_1_1_V_ce0;
reg dmem_1_1_V_we0;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] p_Val2_3_reg_502;
reg   [15:0] p_5_reg_514;
wire   [0:0] d_o_idx_V_read_read_fu_296_p2;
wire   [0:0] tmp_fu_525_p2;
reg   [0:0] tmp_reg_3635;
wire   [16:0] lhs_V_fu_531_p1;
reg   [16:0] lhs_V_reg_3643;
wire   [5:0] tmp_1147_fu_535_p1;
reg   [5:0] tmp_1147_reg_3648;
wire   [0:0] sel_tmp_fu_539_p2;
reg   [0:0] sel_tmp_reg_3653;
wire   [21:0] tmp_s_fu_545_p1;
reg   [21:0] tmp_s_reg_3658;
wire   [21:0] next_mul_fu_549_p2;
reg   [21:0] next_mul_reg_3663;
wire    ap_CS_fsm_state2;
wire   [15:0] o_V_fu_559_p2;
reg   [15:0] o_V_reg_3671;
reg   [0:0] tmp_1149_reg_3676;
wire   [0:0] exitcond_fu_554_p2;
reg   [9:0] dmem_0_0_V_addr_reg_3683;
reg   [9:0] dmem_0_1_V_addr_reg_3688;
reg   [9:0] dmem_1_0_V_addr_reg_3693;
reg   [9:0] dmem_1_1_V_addr_reg_3698;
wire   [63:0] sel_tmp2_fu_624_p3;
reg   [63:0] sel_tmp2_reg_3706;
wire    ap_CS_fsm_state3;
wire   [5:0] o_offset_V_fu_636_p2;
reg   [5:0] o_offset_V_reg_3711;
wire    ap_CS_fsm_state4;
wire   [63:0] o_word_V_4_fu_662_p3;
reg   [63:0] o_word_V_4_reg_3716;
wire   [0:0] tmp_57_fu_670_p2;
reg   [0:0] tmp_57_reg_3723;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state8_pp0_stage0_iter3;
wire    ap_block_state9_pp0_stage0_iter4;
wire    ap_block_state10_pp0_stage0_iter5;
wire    ap_block_state11_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_reg_pp0_iter1_tmp_57_reg_3723;
reg   [0:0] ap_reg_pp0_iter2_tmp_57_reg_3723;
reg   [0:0] ap_reg_pp0_iter3_tmp_57_reg_3723;
reg   [0:0] ap_reg_pp0_iter4_tmp_57_reg_3723;
reg   [0:0] ap_reg_pp0_iter5_tmp_57_reg_3723;
wire   [15:0] i_V_fu_719_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] r_V_s_fu_732_p2;
reg   [63:0] r_V_s_reg_3762;
reg   [0:0] tmp_1150_reg_3767;
reg   [0:0] tmp_1151_reg_3772;
reg   [0:0] tmp_1152_reg_3777;
reg   [0:0] tmp_1153_reg_3782;
reg   [0:0] tmp_1154_reg_3787;
reg   [0:0] tmp_1155_reg_3792;
reg   [0:0] tmp_1156_reg_3797;
reg   [0:0] tmp_1157_reg_3802;
reg   [0:0] tmp_1158_reg_3807;
reg   [0:0] tmp_1159_reg_3812;
reg   [0:0] tmp_1160_reg_3817;
reg   [0:0] tmp_1161_reg_3822;
reg   [0:0] tmp_1162_reg_3827;
reg   [0:0] tmp_1163_reg_3832;
reg   [0:0] tmp_1164_reg_3837;
reg   [0:0] tmp_1165_reg_3842;
reg   [0:0] tmp_1166_reg_3847;
reg   [0:0] tmp_1167_reg_3852;
reg   [0:0] tmp_1168_reg_3857;
reg   [0:0] tmp_1169_reg_3862;
reg   [0:0] tmp_1170_reg_3867;
reg   [0:0] tmp_1171_reg_3872;
reg   [0:0] tmp_1172_reg_3877;
reg   [0:0] tmp_1173_reg_3882;
reg   [0:0] tmp_1174_reg_3887;
reg   [0:0] tmp_1175_reg_3892;
reg   [0:0] tmp_1176_reg_3897;
reg   [0:0] tmp_1177_reg_3902;
reg   [0:0] tmp_1178_reg_3907;
reg   [0:0] tmp_1179_reg_3912;
reg   [0:0] tmp_1180_reg_3917;
reg   [0:0] tmp_1181_reg_3922;
wire   [63:0] r_V_49_1_fu_1001_p2;
reg   [63:0] r_V_49_1_reg_3927;
reg   [0:0] tmp_1184_reg_3932;
reg   [0:0] tmp_1185_reg_3937;
reg   [0:0] tmp_1186_reg_3942;
reg   [0:0] tmp_1187_reg_3947;
reg   [0:0] tmp_1188_reg_3952;
reg   [0:0] tmp_1189_reg_3957;
reg   [0:0] tmp_1190_reg_3962;
reg   [0:0] tmp_1191_reg_3967;
reg   [0:0] tmp_1192_reg_3972;
reg   [0:0] tmp_1193_reg_3977;
reg   [0:0] tmp_1194_reg_3982;
reg   [0:0] tmp_1195_reg_3987;
reg   [0:0] tmp_1196_reg_3992;
reg   [0:0] tmp_1197_reg_3997;
reg   [0:0] tmp_1198_reg_4002;
reg   [0:0] tmp_1199_reg_4007;
reg   [0:0] tmp_1200_reg_4012;
reg   [0:0] tmp_1201_reg_4017;
reg   [0:0] tmp_1202_reg_4022;
reg   [0:0] tmp_1203_reg_4027;
reg   [0:0] tmp_1204_reg_4032;
reg   [0:0] tmp_1205_reg_4037;
reg   [0:0] tmp_1206_reg_4042;
reg   [0:0] tmp_1207_reg_4047;
reg   [0:0] tmp_1208_reg_4052;
reg   [0:0] tmp_1209_reg_4057;
reg   [0:0] tmp_1210_reg_4062;
reg   [0:0] tmp_1211_reg_4067;
reg   [0:0] tmp_1212_reg_4072;
reg   [0:0] tmp_1213_reg_4077;
reg   [0:0] tmp_1214_reg_4082;
reg   [0:0] tmp_1215_reg_4087;
reg   [1:0] tmp_61_reg_4092;
reg   [1:0] tmp_62_reg_4097;
reg   [1:0] tmp_63_reg_4103;
reg   [1:0] tmp_64_reg_4109;
reg   [1:0] tmp_65_reg_4115;
reg   [1:0] tmp_109_reg_4121;
reg   [1:0] tmp_110_reg_4127;
reg   [1:0] tmp_111_reg_4133;
reg   [1:0] tmp_112_reg_4139;
reg   [1:0] tmp_113_reg_4145;
reg   [1:0] tmp_114_reg_4151;
reg   [1:0] tmp_115_reg_4157;
reg   [1:0] tmp_116_reg_4163;
reg   [1:0] tmp_117_reg_4169;
reg   [1:0] tmp_118_reg_4175;
wire   [1:0] tmp_1182_fu_1520_p1;
reg   [1:0] tmp_1182_reg_4181;
reg   [1:0] tmp_119_reg_4188;
reg   [1:0] tmp_120_reg_4193;
reg   [1:0] tmp_121_reg_4199;
reg   [1:0] tmp_122_reg_4205;
reg   [1:0] tmp_123_reg_4211;
reg   [1:0] tmp_124_reg_4217;
reg   [1:0] tmp_125_reg_4223;
reg   [1:0] tmp_126_reg_4229;
reg   [1:0] tmp_127_reg_4235;
reg   [1:0] tmp_128_reg_4241;
reg   [1:0] tmp_129_reg_4247;
reg   [1:0] tmp_130_reg_4253;
reg   [1:0] tmp_131_reg_4259;
reg   [1:0] tmp_132_reg_4265;
reg   [1:0] tmp_133_reg_4271;
reg   [1:0] tmp_134_reg_4277;
reg   [1:0] tmp_147_reg_4284;
reg   [1:0] tmp_148_reg_4289;
reg   [1:0] tmp_149_reg_4295;
reg   [1:0] tmp_150_reg_4301;
reg   [1:0] tmp_151_reg_4307;
reg   [1:0] tmp_152_reg_4313;
reg   [1:0] tmp_153_reg_4319;
reg   [1:0] tmp_154_reg_4325;
reg   [1:0] tmp_155_reg_4331;
reg   [1:0] tmp_156_reg_4337;
reg   [1:0] tmp_157_reg_4343;
reg   [1:0] tmp_158_reg_4349;
reg   [1:0] tmp_159_reg_4355;
reg   [1:0] tmp_160_reg_4361;
reg   [1:0] tmp_161_reg_4367;
wire   [1:0] tmp_1216_fu_1941_p1;
reg   [1:0] tmp_1216_reg_4373;
reg   [1:0] tmp_162_reg_4380;
reg   [1:0] tmp_163_reg_4385;
reg   [1:0] tmp_164_reg_4391;
reg   [1:0] tmp_165_reg_4397;
reg   [1:0] tmp_166_reg_4403;
reg   [1:0] tmp_167_reg_4409;
reg   [1:0] tmp_168_reg_4415;
reg   [1:0] tmp_169_reg_4421;
reg   [1:0] tmp_170_reg_4427;
reg   [1:0] tmp_171_reg_4433;
reg   [1:0] tmp_172_reg_4439;
reg   [1:0] tmp_173_reg_4445;
reg   [1:0] tmp_174_reg_4451;
reg   [1:0] tmp_175_reg_4457;
reg   [1:0] tmp_176_reg_4463;
reg   [1:0] tmp_177_reg_4469;
reg   [3:0] tmp_137_reg_4476;
reg   [3:0] tmp_138_reg_4482;
reg   [3:0] tmp_139_reg_4489;
reg   [3:0] tmp_140_reg_4497;
reg   [3:0] tmp_141_reg_4505;
reg   [3:0] tmp_142_reg_4513;
reg   [3:0] tmp_143_reg_4521;
reg   [3:0] ap_reg_pp0_iter4_tmp_143_reg_4521;
wire   [3:0] tmp_1183_fu_2435_p1;
reg   [3:0] tmp_1183_reg_4530;
wire   [3:0] tmp_71_fu_2445_p2;
reg   [3:0] tmp_71_reg_4536;
reg   [3:0] ap_reg_pp0_iter4_tmp_71_reg_4536;
reg   [3:0] tmp_180_reg_4541;
reg   [3:0] tmp_181_reg_4547;
reg   [3:0] tmp_182_reg_4554;
reg   [3:0] tmp_183_reg_4562;
reg   [3:0] tmp_184_reg_4570;
reg   [3:0] tmp_185_reg_4578;
reg   [3:0] tmp_186_reg_4586;
reg   [3:0] ap_reg_pp0_iter4_tmp_186_reg_4586;
wire   [3:0] tmp_1217_fu_2781_p1;
reg   [3:0] tmp_1217_reg_4595;
wire   [3:0] tmp_88_fu_2791_p2;
reg   [3:0] tmp_88_reg_4601;
reg   [3:0] ap_reg_pp0_iter4_tmp_88_reg_4601;
reg   [6:0] tmp_76_reg_4606;
reg   [6:0] tmp_77_reg_4611;
reg   [6:0] tmp_104_reg_4616;
reg   [6:0] tmp_105_reg_4621;
wire   [6:0] tmp_80_fu_3143_p2;
reg   [6:0] tmp_80_reg_4626;
wire   [6:0] tmp_1883_s_fu_3169_p2;
reg   [6:0] tmp_1883_s_reg_4631;
wire   [15:0] sum_V_1_fu_3227_p2;
reg    ap_enable_reg_pp0_iter6;
wire    ap_CS_fsm_state12;
wire   [0:0] kh_off_V_1_fu_3248_p1;
reg   [0:0] kh_off_V_1_reg_4646;
wire    ap_CS_fsm_state13;
reg   [63:0] kh_word_V_2_reg_4651;
wire   [15:0] ki_V_2_fu_3266_p3;
reg  signed [15:0] ki_V_2_reg_4657;
wire    ap_CS_fsm_state14;
wire  signed [35:0] p_Val2_1_fu_3597_p2;
reg  signed [35:0] p_Val2_1_reg_4667;
wire   [36:0] p_Val2_2_fu_3384_p2;
reg   [36:0] p_Val2_2_reg_4672;
wire    ap_CS_fsm_state15;
wire   [0:0] not_s_fu_3504_p2;
reg   [0:0] not_s_reg_4677;
wire   [0:0] sel_tmp25_demorgan_fu_3516_p2;
reg   [0:0] sel_tmp25_demorgan_reg_4682;
wire   [15:0] best_out_V_2_fu_3560_p3;
wire    ap_CS_fsm_state16;
wire   [7:0] prediction_V_2_fu_3590_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state5;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg   [15:0] p_Val2_7_reg_454;
reg   [7:0] p_Val2_s_reg_466;
reg   [15:0] p_s_reg_478;
reg   [21:0] phi_mul_reg_490;
wire   [31:0] tmp_56_fu_589_p1;
wire   [0:0] tmp_52_fu_605_p2;
wire   [31:0] tmp_59_fu_695_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] tmp_60_fu_713_p1;
wire   [31:0] tmp_91_fu_3243_p1;
wire   [31:0] tmp_89_fu_3284_p1;
wire   [63:0] o_word_V_3_fu_3573_p3;
wire   [63:0] p_Result_9_fu_610_p3;
wire   [16:0] rhs_V_fu_565_p1;
wire   [16:0] r_V_fu_574_p2;
wire   [9:0] tmp_55_fu_579_p4;
wire   [15:0] tmp_54_fu_569_p2;
wire   [0:0] sel_tmp1_fu_620_p2;
wire   [5:0] tmp_1148_fu_632_p1;
wire   [0:0] sel_tmp3_fu_641_p2;
wire   [0:0] sel_tmp4_fu_646_p2;
wire   [0:0] sel_tmp6_fu_658_p2;
wire   [63:0] sel_tmp5_fu_651_p3;
wire   [21:0] rhs_V_4_cast_fu_675_p1;
wire   [8:0] r_V_9_fu_685_p4;
wire   [21:0] r_V_7_fu_679_p2;
wire   [14:0] p_0856_s_fu_703_p4;
wire   [63:0] in_wrd_V_0_phi_fu_725_p3;
wire   [63:0] in_wrd_V_1_phi_fu_994_p3;
wire   [62:0] r_V_1_fu_1263_p64;
wire   [63:0] r_V_1_cast_fu_1361_p1;
wire   [63:0] x_V_6_fu_1365_p2;
wire   [62:0] r_V_44_1_fu_1684_p64;
wire   [63:0] r_V_44_1_cast_fu_1782_p1;
wire   [63:0] x_V_6_1_fu_1786_p2;
wire   [61:0] r_V_2_fu_2105_p32;
wire   [61:0] r_V_3_fu_2159_p32;
wire   [62:0] r_V_2_cast_fu_2155_p1;
wire   [62:0] r_V_3_cast_fu_2209_p1;
wire   [62:0] x_V_fu_2317_p2;
wire   [58:0] tmp_136_fu_2329_p4;
wire   [59:0] tmp_67_fu_2262_p31;
wire   [59:0] tmp_66_fu_2213_p31;
wire   [59:0] tmp_69_fu_2343_p2;
wire   [59:0] tmp_68_fu_2339_p1;
wire   [61:0] tmp_135_fu_2311_p2;
wire   [59:0] tmp_186_cast_fu_2349_p2;
wire   [3:0] tmp_70_fu_2355_p4;
wire   [3:0] tmp_1233_cast_fu_2323_p1;
wire   [3:0] tmp_1234_cast_fu_2326_p1;
wire   [3:0] tmp41_fu_2439_p2;
wire   [61:0] r_V_45_1_fu_2451_p32;
wire   [61:0] r_V_46_1_fu_2505_p32;
wire   [62:0] r_V_45_1_cast_fu_2501_p1;
wire   [62:0] r_V_46_1_cast_fu_2555_p1;
wire   [62:0] x_V_1_fu_2663_p2;
wire   [58:0] tmp_179_fu_2675_p4;
wire   [59:0] tmp_84_fu_2608_p31;
wire   [59:0] tmp_83_fu_2559_p31;
wire   [59:0] tmp_86_fu_2689_p2;
wire   [59:0] tmp_85_fu_2685_p1;
wire   [61:0] tmp_178_fu_2657_p2;
wire   [59:0] tmp_186_1_cast_fu_2695_p2;
wire   [3:0] tmp_87_fu_2701_p4;
wire   [3:0] tmp_1248_cast_fu_2669_p1;
wire   [3:0] tmp_1249_cast_fu_2672_p1;
wire   [3:0] tmp44_fu_2785_p2;
wire   [59:0] x_V_2_fu_2797_p16;
wire   [51:0] r_V_4_fu_2827_p14;
wire   [59:0] tmp_144_fu_2850_p1;
wire   [60:0] x_V_2_cast_fu_2823_p1;
wire   [60:0] r_V_4_cast_fu_2854_p1;
wire   [46:0] tmp_73_fu_2880_p13;
wire   [46:0] tmp_72_fu_2858_p13;
wire   [60:0] x_V_3_fu_2908_p2;
wire   [44:0] tmp_146_fu_2920_p4;
wire   [46:0] x_V_3_cast_fu_2914_p2;
wire   [46:0] r_V_5_cast_fu_2930_p1;
wire   [46:0] x_V_4_fu_2934_p2;
wire   [59:0] tmp_145_fu_2902_p2;
wire   [59:0] x_V_2_1_fu_2960_p16;
wire   [51:0] r_V_47_1_fu_2990_p14;
wire   [59:0] tmp_187_fu_3013_p1;
wire   [60:0] x_V_2_1_cast_fu_2986_p1;
wire   [60:0] r_V_47_1_cast_fu_3017_p1;
wire   [46:0] tmp_98_fu_3043_p13;
wire   [46:0] tmp_94_fu_3021_p13;
wire   [60:0] x_V_3_1_fu_3071_p2;
wire   [44:0] tmp_189_fu_3083_p4;
wire   [46:0] x_V_3_1_cast_fu_3077_p2;
wire   [46:0] r_V_48_1_cast_fu_3093_p1;
wire   [46:0] x_V_4_1_fu_3097_p2;
wire   [59:0] tmp_188_fu_3065_p2;
wire   [6:0] tmp_75_fu_3126_p3;
wire   [6:0] tmp_74_fu_3123_p1;
wire   [6:0] tmp_78_fu_3133_p2;
wire   [6:0] tmp_79_fu_3137_p2;
wire   [6:0] tmp_103_fu_3152_p3;
wire   [6:0] tmp_100_fu_3149_p1;
wire   [6:0] tmp_106_fu_3159_p2;
wire   [6:0] tmp_107_fu_3163_p2;
wire   [7:0] tmp_81_fu_3175_p3;
wire   [8:0] phitmp_cast_fu_3182_p1;
wire   [8:0] tmp_82_fu_3186_p2;
wire   [7:0] tmp_189_1_fu_3196_p3;
wire   [8:0] phitmp_1_cast_fu_3203_p1;
wire   [8:0] tmp_190_1_fu_3207_p2;
wire  signed [9:0] tmp_190_cast_fu_3192_p1;
wire  signed [9:0] tmp_190_1_cast_fu_3213_p1;
wire   [9:0] tmp_108_fu_3217_p2;
wire  signed [15:0] p_cast_fu_3223_p1;
wire   [14:0] r_V_10_fu_3233_p4;
wire   [15:0] loc_V_8_fu_3256_p4;
wire   [15:0] loc_V_7_fu_3252_p1;
wire   [13:0] r_V_8_fu_3274_p4;
wire   [9:0] tmp_1222_fu_3289_p1;
wire  signed [19:0] tmp_95_fu_3293_p3;
wire   [1:0] kh_off_V_fu_3308_p1;
wire   [15:0] tmp_190_fu_3347_p4;
wire   [15:0] tmp_191_fu_3356_p4;
wire   [15:0] tmp_192_fu_3365_p3;
wire   [27:0] tmp_97_fu_3372_p3;
wire  signed [36:0] tmp_104_cast_fu_3380_p1;
wire   [36:0] tmp_96_fu_3344_p1;
wire   [19:0] p_Val2_6_fu_3390_p4;
wire  signed [21:0] tmp_107_cast_fu_3426_p1;
wire   [21:0] tmp_101_fu_3430_p3;
wire   [0:0] tmp_90_fu_3312_p2;
wire   [0:0] tmp_92_fu_3322_p2;
wire   [0:0] sel_tmp12_fu_3444_p2;
wire   [0:0] sel_tmp17_demorgan_fu_3456_p2;
wire   [0:0] tmp_93_fu_3338_p2;
wire   [0:0] sel_tmp17_fu_3462_p2;
wire   [0:0] sel_tmp18_fu_3468_p2;
wire   [15:0] loc_V_10_fu_3406_p4;
wire   [15:0] loc_V_9_fu_3328_p4;
wire   [0:0] sel_tmp13_fu_3450_p2;
wire   [15:0] loc_V_fu_3318_p1;
wire   [15:0] loc_V_11_fu_3416_p4;
wire   [0:0] or_cond_fu_3482_p2;
wire   [15:0] newSel_fu_3474_p3;
wire   [15:0] newSel1_fu_3488_p3;
wire   [15:0] nc_V_4_fu_3496_p3;
wire   [0:0] tmp_99_fu_3400_p2;
wire   [0:0] tmp_102_fu_3438_p2;
wire   [0:0] tmp47_fu_3510_p2;
wire   [31:0] bvh_d_index_fu_3521_p1;
wire   [63:0] p_Repl2_s_fu_3524_p1;
wire   [13:0] p_Val2_s_63_fu_3540_p4;
wire  signed [15:0] best_out_V_fu_3549_p1;
wire   [15:0] best_out_V_1_fu_3553_p3;
reg   [63:0] p_Result_s_fu_3527_p4;
wire   [63:0] o_word_V_2_fu_3567_p3;
wire   [7:0] prediction_V_fu_3536_p1;
wire   [7:0] prediction_V_1_fu_3583_p3;
reg   [9:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
end

a0_top_mul_mul_20s_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 36 ))
top_mul_mul_20s_1bkb_U1(
    .din0(tmp_95_fu_3293_p3),
    .din1(ki_V_2_reg_4657),
    .dout(p_Val2_1_fu_3597_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'b1 == ap_condition_pp0_exit_iter0_state5))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state5)) begin
                ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state5 ^ 1'b1);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((ap_block_pp0_stage0_subdone == 1'b0)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd1 == tmp_57_fu_670_p2) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        p_5_reg_514 <= i_V_fu_719_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_5_reg_514 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter6) & (1'd1 == ap_reg_pp0_iter5_tmp_57_reg_3723))) begin
        p_Val2_3_reg_502 <= sum_V_1_fu_3227_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        p_Val2_3_reg_502 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_Val2_7_reg_454 <= best_out_V_2_fu_3560_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_7_reg_454 <= 16'd49152;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_Val2_s_reg_466 <= prediction_V_2_fu_3590_p3;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Val2_s_reg_466 <= 8'd255;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_s_reg_478 <= o_V_reg_3671;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_s_reg_478 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        phi_mul_reg_490 <= next_mul_reg_3663;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_mul_reg_490 <= 22'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0))) begin
        ap_reg_pp0_iter1_tmp_57_reg_3723 <= tmp_57_reg_3723;
        tmp_57_reg_3723 <= tmp_57_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_block_pp0_stage0_11001 == 1'b0)) begin
        ap_reg_pp0_iter2_tmp_57_reg_3723 <= ap_reg_pp0_iter1_tmp_57_reg_3723;
        ap_reg_pp0_iter3_tmp_57_reg_3723 <= ap_reg_pp0_iter2_tmp_57_reg_3723;
        ap_reg_pp0_iter4_tmp_143_reg_4521 <= tmp_143_reg_4521;
        ap_reg_pp0_iter4_tmp_186_reg_4586 <= tmp_186_reg_4586;
        ap_reg_pp0_iter4_tmp_57_reg_3723 <= ap_reg_pp0_iter3_tmp_57_reg_3723;
        ap_reg_pp0_iter4_tmp_71_reg_4536 <= tmp_71_reg_4536;
        ap_reg_pp0_iter4_tmp_88_reg_4601 <= tmp_88_reg_4601;
        ap_reg_pp0_iter5_tmp_57_reg_3723 <= ap_reg_pp0_iter4_tmp_57_reg_3723;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd0))) begin
        dmem_0_0_V_addr_reg_3683 <= tmp_56_fu_589_p1;
        dmem_0_1_V_addr_reg_3688 <= tmp_56_fu_589_p1;
        dmem_1_0_V_addr_reg_3693 <= tmp_56_fu_589_p1;
        dmem_1_1_V_addr_reg_3698 <= tmp_56_fu_589_p1;
        tmp_1149_reg_3676 <= tmp_54_fu_569_p2[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        kh_off_V_1_reg_4646 <= kh_off_V_1_fu_3248_p1;
        kh_word_V_2_reg_4651 <= kh_mem_V_q0;
        ki_V_2_reg_4657 <= ki_V_2_fu_3266_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        lhs_V_reg_3643[15 : 0] <= lhs_V_fu_531_p1[15 : 0];
        sel_tmp_reg_3653 <= sel_tmp_fu_539_p2;
        tmp_1147_reg_3648 <= tmp_1147_fu_535_p1;
        tmp_reg_3635 <= tmp_fu_525_p2;
        tmp_s_reg_3658[15 : 0] <= tmp_s_fu_545_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        next_mul_reg_3663 <= next_mul_fu_549_p2;
        o_V_reg_3671 <= o_V_fu_559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_reg_3635 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        not_s_reg_4677 <= not_s_fu_3504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (tmp_reg_3635 == 1'd1))) begin
        o_offset_V_reg_3711 <= o_offset_V_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        o_word_V_4_reg_3716 <= o_word_V_4_fu_662_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        p_Val2_1_reg_4667 <= p_Val2_1_fu_3597_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        p_Val2_2_reg_4672 <= p_Val2_2_fu_3384_p2;
        sel_tmp25_demorgan_reg_4682 <= sel_tmp25_demorgan_fu_3516_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'd1 == tmp_57_reg_3723))) begin
        r_V_49_1_reg_3927 <= r_V_49_1_fu_1001_p2;
        r_V_s_reg_3762 <= r_V_s_fu_732_p2;
        tmp_1150_reg_3767 <= r_V_s_fu_732_p2[32'd63];
        tmp_1151_reg_3772 <= r_V_s_fu_732_p2[32'd61];
        tmp_1152_reg_3777 <= r_V_s_fu_732_p2[32'd59];
        tmp_1153_reg_3782 <= r_V_s_fu_732_p2[32'd57];
        tmp_1154_reg_3787 <= r_V_s_fu_732_p2[32'd55];
        tmp_1155_reg_3792 <= r_V_s_fu_732_p2[32'd53];
        tmp_1156_reg_3797 <= r_V_s_fu_732_p2[32'd51];
        tmp_1157_reg_3802 <= r_V_s_fu_732_p2[32'd49];
        tmp_1158_reg_3807 <= r_V_s_fu_732_p2[32'd47];
        tmp_1159_reg_3812 <= r_V_s_fu_732_p2[32'd45];
        tmp_1160_reg_3817 <= r_V_s_fu_732_p2[32'd43];
        tmp_1161_reg_3822 <= r_V_s_fu_732_p2[32'd41];
        tmp_1162_reg_3827 <= r_V_s_fu_732_p2[32'd39];
        tmp_1163_reg_3832 <= r_V_s_fu_732_p2[32'd37];
        tmp_1164_reg_3837 <= r_V_s_fu_732_p2[32'd35];
        tmp_1165_reg_3842 <= r_V_s_fu_732_p2[32'd33];
        tmp_1166_reg_3847 <= r_V_s_fu_732_p2[32'd31];
        tmp_1167_reg_3852 <= r_V_s_fu_732_p2[32'd29];
        tmp_1168_reg_3857 <= r_V_s_fu_732_p2[32'd27];
        tmp_1169_reg_3862 <= r_V_s_fu_732_p2[32'd25];
        tmp_1170_reg_3867 <= r_V_s_fu_732_p2[32'd23];
        tmp_1171_reg_3872 <= r_V_s_fu_732_p2[32'd21];
        tmp_1172_reg_3877 <= r_V_s_fu_732_p2[32'd19];
        tmp_1173_reg_3882 <= r_V_s_fu_732_p2[32'd17];
        tmp_1174_reg_3887 <= r_V_s_fu_732_p2[32'd15];
        tmp_1175_reg_3892 <= r_V_s_fu_732_p2[32'd13];
        tmp_1176_reg_3897 <= r_V_s_fu_732_p2[32'd11];
        tmp_1177_reg_3902 <= r_V_s_fu_732_p2[32'd9];
        tmp_1178_reg_3907 <= r_V_s_fu_732_p2[32'd7];
        tmp_1179_reg_3912 <= r_V_s_fu_732_p2[32'd5];
        tmp_1180_reg_3917 <= r_V_s_fu_732_p2[32'd3];
        tmp_1181_reg_3922 <= r_V_s_fu_732_p2[32'd1];
        tmp_1184_reg_3932 <= r_V_49_1_fu_1001_p2[32'd63];
        tmp_1185_reg_3937 <= r_V_49_1_fu_1001_p2[32'd61];
        tmp_1186_reg_3942 <= r_V_49_1_fu_1001_p2[32'd59];
        tmp_1187_reg_3947 <= r_V_49_1_fu_1001_p2[32'd57];
        tmp_1188_reg_3952 <= r_V_49_1_fu_1001_p2[32'd55];
        tmp_1189_reg_3957 <= r_V_49_1_fu_1001_p2[32'd53];
        tmp_1190_reg_3962 <= r_V_49_1_fu_1001_p2[32'd51];
        tmp_1191_reg_3967 <= r_V_49_1_fu_1001_p2[32'd49];
        tmp_1192_reg_3972 <= r_V_49_1_fu_1001_p2[32'd47];
        tmp_1193_reg_3977 <= r_V_49_1_fu_1001_p2[32'd45];
        tmp_1194_reg_3982 <= r_V_49_1_fu_1001_p2[32'd43];
        tmp_1195_reg_3987 <= r_V_49_1_fu_1001_p2[32'd41];
        tmp_1196_reg_3992 <= r_V_49_1_fu_1001_p2[32'd39];
        tmp_1197_reg_3997 <= r_V_49_1_fu_1001_p2[32'd37];
        tmp_1198_reg_4002 <= r_V_49_1_fu_1001_p2[32'd35];
        tmp_1199_reg_4007 <= r_V_49_1_fu_1001_p2[32'd33];
        tmp_1200_reg_4012 <= r_V_49_1_fu_1001_p2[32'd31];
        tmp_1201_reg_4017 <= r_V_49_1_fu_1001_p2[32'd29];
        tmp_1202_reg_4022 <= r_V_49_1_fu_1001_p2[32'd27];
        tmp_1203_reg_4027 <= r_V_49_1_fu_1001_p2[32'd25];
        tmp_1204_reg_4032 <= r_V_49_1_fu_1001_p2[32'd23];
        tmp_1205_reg_4037 <= r_V_49_1_fu_1001_p2[32'd21];
        tmp_1206_reg_4042 <= r_V_49_1_fu_1001_p2[32'd19];
        tmp_1207_reg_4047 <= r_V_49_1_fu_1001_p2[32'd17];
        tmp_1208_reg_4052 <= r_V_49_1_fu_1001_p2[32'd15];
        tmp_1209_reg_4057 <= r_V_49_1_fu_1001_p2[32'd13];
        tmp_1210_reg_4062 <= r_V_49_1_fu_1001_p2[32'd11];
        tmp_1211_reg_4067 <= r_V_49_1_fu_1001_p2[32'd9];
        tmp_1212_reg_4072 <= r_V_49_1_fu_1001_p2[32'd7];
        tmp_1213_reg_4077 <= r_V_49_1_fu_1001_p2[32'd5];
        tmp_1214_reg_4082 <= r_V_49_1_fu_1001_p2[32'd3];
        tmp_1215_reg_4087 <= r_V_49_1_fu_1001_p2[32'd1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sel_tmp2_reg_3706 <= sel_tmp2_fu_624_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter3_tmp_57_reg_3723))) begin
        tmp_104_reg_4616 <= {{x_V_4_1_fu_3097_p2[38:32]}};
        tmp_105_reg_4621 <= {{tmp_188_fu_3065_p2[22:16]}};
        tmp_76_reg_4606 <= {{x_V_4_fu_2934_p2[38:32]}};
        tmp_77_reg_4611 <= {{tmp_145_fu_2902_p2[22:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter1_tmp_57_reg_3723))) begin
        tmp_109_reg_4121 <= {{x_V_6_fu_1365_p2[41:40]}};
        tmp_110_reg_4127 <= {{x_V_6_fu_1365_p2[37:36]}};
        tmp_111_reg_4133 <= {{x_V_6_fu_1365_p2[33:32]}};
        tmp_112_reg_4139 <= {{x_V_6_fu_1365_p2[29:28]}};
        tmp_113_reg_4145 <= {{x_V_6_fu_1365_p2[25:24]}};
        tmp_114_reg_4151 <= {{x_V_6_fu_1365_p2[21:20]}};
        tmp_115_reg_4157 <= {{x_V_6_fu_1365_p2[17:16]}};
        tmp_116_reg_4163 <= {{x_V_6_fu_1365_p2[13:12]}};
        tmp_117_reg_4169 <= {{x_V_6_fu_1365_p2[9:8]}};
        tmp_1182_reg_4181 <= tmp_1182_fu_1520_p1;
        tmp_118_reg_4175 <= {{x_V_6_fu_1365_p2[5:4]}};
        tmp_119_reg_4188 <= {{x_V_6_fu_1365_p2[63:62]}};
        tmp_120_reg_4193 <= {{x_V_6_fu_1365_p2[59:58]}};
        tmp_1216_reg_4373 <= tmp_1216_fu_1941_p1;
        tmp_121_reg_4199 <= {{x_V_6_fu_1365_p2[55:54]}};
        tmp_122_reg_4205 <= {{x_V_6_fu_1365_p2[51:50]}};
        tmp_123_reg_4211 <= {{x_V_6_fu_1365_p2[47:46]}};
        tmp_124_reg_4217 <= {{x_V_6_fu_1365_p2[43:42]}};
        tmp_125_reg_4223 <= {{x_V_6_fu_1365_p2[39:38]}};
        tmp_126_reg_4229 <= {{x_V_6_fu_1365_p2[35:34]}};
        tmp_127_reg_4235 <= {{x_V_6_fu_1365_p2[31:30]}};
        tmp_128_reg_4241 <= {{x_V_6_fu_1365_p2[27:26]}};
        tmp_129_reg_4247 <= {{x_V_6_fu_1365_p2[23:22]}};
        tmp_130_reg_4253 <= {{x_V_6_fu_1365_p2[19:18]}};
        tmp_131_reg_4259 <= {{x_V_6_fu_1365_p2[15:14]}};
        tmp_132_reg_4265 <= {{x_V_6_fu_1365_p2[11:10]}};
        tmp_133_reg_4271 <= {{x_V_6_fu_1365_p2[7:6]}};
        tmp_134_reg_4277 <= {{x_V_6_fu_1365_p2[3:2]}};
        tmp_147_reg_4284 <= {{x_V_6_1_fu_1786_p2[61:60]}};
        tmp_148_reg_4289 <= {{x_V_6_1_fu_1786_p2[57:56]}};
        tmp_149_reg_4295 <= {{x_V_6_1_fu_1786_p2[53:52]}};
        tmp_150_reg_4301 <= {{x_V_6_1_fu_1786_p2[49:48]}};
        tmp_151_reg_4307 <= {{x_V_6_1_fu_1786_p2[45:44]}};
        tmp_152_reg_4313 <= {{x_V_6_1_fu_1786_p2[41:40]}};
        tmp_153_reg_4319 <= {{x_V_6_1_fu_1786_p2[37:36]}};
        tmp_154_reg_4325 <= {{x_V_6_1_fu_1786_p2[33:32]}};
        tmp_155_reg_4331 <= {{x_V_6_1_fu_1786_p2[29:28]}};
        tmp_156_reg_4337 <= {{x_V_6_1_fu_1786_p2[25:24]}};
        tmp_157_reg_4343 <= {{x_V_6_1_fu_1786_p2[21:20]}};
        tmp_158_reg_4349 <= {{x_V_6_1_fu_1786_p2[17:16]}};
        tmp_159_reg_4355 <= {{x_V_6_1_fu_1786_p2[13:12]}};
        tmp_160_reg_4361 <= {{x_V_6_1_fu_1786_p2[9:8]}};
        tmp_161_reg_4367 <= {{x_V_6_1_fu_1786_p2[5:4]}};
        tmp_162_reg_4380 <= {{x_V_6_1_fu_1786_p2[63:62]}};
        tmp_163_reg_4385 <= {{x_V_6_1_fu_1786_p2[59:58]}};
        tmp_164_reg_4391 <= {{x_V_6_1_fu_1786_p2[55:54]}};
        tmp_165_reg_4397 <= {{x_V_6_1_fu_1786_p2[51:50]}};
        tmp_166_reg_4403 <= {{x_V_6_1_fu_1786_p2[47:46]}};
        tmp_167_reg_4409 <= {{x_V_6_1_fu_1786_p2[43:42]}};
        tmp_168_reg_4415 <= {{x_V_6_1_fu_1786_p2[39:38]}};
        tmp_169_reg_4421 <= {{x_V_6_1_fu_1786_p2[35:34]}};
        tmp_170_reg_4427 <= {{x_V_6_1_fu_1786_p2[31:30]}};
        tmp_171_reg_4433 <= {{x_V_6_1_fu_1786_p2[27:26]}};
        tmp_172_reg_4439 <= {{x_V_6_1_fu_1786_p2[23:22]}};
        tmp_173_reg_4445 <= {{x_V_6_1_fu_1786_p2[19:18]}};
        tmp_174_reg_4451 <= {{x_V_6_1_fu_1786_p2[15:14]}};
        tmp_175_reg_4457 <= {{x_V_6_1_fu_1786_p2[11:10]}};
        tmp_176_reg_4463 <= {{x_V_6_1_fu_1786_p2[7:6]}};
        tmp_177_reg_4469 <= {{x_V_6_1_fu_1786_p2[3:2]}};
        tmp_61_reg_4092 <= {{x_V_6_fu_1365_p2[61:60]}};
        tmp_62_reg_4097 <= {{x_V_6_fu_1365_p2[57:56]}};
        tmp_63_reg_4103 <= {{x_V_6_fu_1365_p2[53:52]}};
        tmp_64_reg_4109 <= {{x_V_6_fu_1365_p2[49:48]}};
        tmp_65_reg_4115 <= {{x_V_6_fu_1365_p2[45:44]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter2_tmp_57_reg_3723))) begin
        tmp_1183_reg_4530 <= tmp_1183_fu_2435_p1;
        tmp_1217_reg_4595 <= tmp_1217_fu_2781_p1;
        tmp_137_reg_4476 <= {{tmp_186_cast_fu_2349_p2[59:56]}};
        tmp_138_reg_4482 <= {{tmp_186_cast_fu_2349_p2[51:48]}};
        tmp_139_reg_4489 <= {{tmp_186_cast_fu_2349_p2[43:40]}};
        tmp_140_reg_4497 <= {{tmp_186_cast_fu_2349_p2[35:32]}};
        tmp_141_reg_4505 <= {{tmp_186_cast_fu_2349_p2[27:24]}};
        tmp_142_reg_4513 <= {{tmp_186_cast_fu_2349_p2[19:16]}};
        tmp_143_reg_4521 <= {{tmp_186_cast_fu_2349_p2[11:8]}};
        tmp_180_reg_4541 <= {{tmp_186_1_cast_fu_2695_p2[59:56]}};
        tmp_181_reg_4547 <= {{tmp_186_1_cast_fu_2695_p2[51:48]}};
        tmp_182_reg_4554 <= {{tmp_186_1_cast_fu_2695_p2[43:40]}};
        tmp_183_reg_4562 <= {{tmp_186_1_cast_fu_2695_p2[35:32]}};
        tmp_184_reg_4570 <= {{tmp_186_1_cast_fu_2695_p2[27:24]}};
        tmp_185_reg_4578 <= {{tmp_186_1_cast_fu_2695_p2[19:16]}};
        tmp_186_reg_4586 <= {{tmp_186_1_cast_fu_2695_p2[11:8]}};
        tmp_71_reg_4536 <= tmp_71_fu_2445_p2;
        tmp_88_reg_4601 <= tmp_88_fu_2791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_block_pp0_stage0_11001 == 1'b0) & (1'd1 == ap_reg_pp0_iter4_tmp_57_reg_3723))) begin
        tmp_1883_s_reg_4631 <= tmp_1883_s_fu_3169_p2;
        tmp_80_reg_4626 <= tmp_80_fu_3143_p2;
    end
end

always @ (*) begin
    if ((1'd0 == tmp_57_fu_670_p2)) begin
        ap_condition_pp0_exit_iter0_state5 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state5 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dmem_0_0_V_address0 = dmem_0_0_V_addr_reg_3683;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0 == 1'b0))) begin
        dmem_0_0_V_address0 = tmp_59_fu_695_p1;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd1) & (1'd1 == tmp_52_fu_605_p2) & (d_o_idx_V_read_read_fu_296_p2 == 1'd0))) begin
        dmem_0_0_V_address0 = 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd0))) begin
        dmem_0_0_V_address0 = tmp_56_fu_589_p1;
    end else begin
        dmem_0_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd1) & (1'd1 == tmp_52_fu_605_p2) & (d_o_idx_V_read_read_fu_296_p2 == 1'd0)))) begin
        dmem_0_0_V_ce0 = 1'b1;
    end else begin
        dmem_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dmem_0_0_V_d0 = o_word_V_3_fu_3573_p3;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd1) & (1'd1 == tmp_52_fu_605_p2) & (d_o_idx_V_read_read_fu_296_p2 == 1'd0))) begin
        dmem_0_0_V_d0 = p_Result_9_fu_610_p3;
    end else begin
        dmem_0_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd1) & (1'd1 == tmp_52_fu_605_p2) & (d_o_idx_V_read_read_fu_296_p2 == 1'd0)) | ((1'b1 == ap_CS_fsm_state16) & (d_o_idx_V_read_read_fu_296_p2 == 1'd0) & (tmp_1149_reg_3676 == 1'd0)))) begin
        dmem_0_0_V_we0 = 1'b1;
    end else begin
        dmem_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dmem_0_1_V_address0 = dmem_0_1_V_addr_reg_3688;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0 == 1'b0))) begin
        dmem_0_1_V_address0 = tmp_59_fu_695_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dmem_0_1_V_address0 = tmp_56_fu_589_p1;
    end else begin
        dmem_0_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state16))) begin
        dmem_0_1_V_ce0 = 1'b1;
    end else begin
        dmem_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (d_o_idx_V_read_read_fu_296_p2 == 1'd0) & (tmp_1149_reg_3676 == 1'd1))) begin
        dmem_0_1_V_we0 = 1'b1;
    end else begin
        dmem_0_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0 == 1'b0))) begin
        dmem_1_0_V_address0 = tmp_59_fu_695_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state16))) begin
        dmem_1_0_V_address0 = dmem_1_0_V_addr_reg_3693;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dmem_1_0_V_address0 = 32'd0;
    end else begin
        dmem_1_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state16))) begin
        dmem_1_0_V_ce0 = 1'b1;
    end else begin
        dmem_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        dmem_1_0_V_d0 = o_word_V_3_fu_3573_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        dmem_1_0_V_d0 = p_Result_9_fu_610_p3;
    end else begin
        dmem_1_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd1) & (1'd1 == tmp_52_fu_605_p2) & (d_o_idx_V_read_read_fu_296_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (tmp_1149_reg_3676 == 1'd0) & (d_o_idx_V_read_read_fu_296_p2 == 1'd1)))) begin
        dmem_1_0_V_we0 = 1'b1;
    end else begin
        dmem_1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0 == 1'b0))) begin
        dmem_1_1_V_address0 = tmp_59_fu_695_p1;
    end else if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state16))) begin
        dmem_1_1_V_address0 = dmem_1_1_V_addr_reg_3698;
    end else begin
        dmem_1_1_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0)) | (1'b1 == ap_CS_fsm_state16))) begin
        dmem_1_1_V_ce0 = 1'b1;
    end else begin
        dmem_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (tmp_1149_reg_3676 == 1'd1) & (d_o_idx_V_read_read_fu_296_p2 == 1'd1))) begin
        dmem_1_1_V_we0 = 1'b1;
    end else begin
        dmem_1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        kh_mem_V_address0 = tmp_89_fu_3284_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        kh_mem_V_address0 = tmp_91_fu_3243_p1;
    end else begin
        kh_mem_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state14))) begin
        kh_mem_V_ce0 = 1'b1;
    end else begin
        kh_mem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        wt_mem_0_V_ce0 = 1'b1;
    end else begin
        wt_mem_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_block_pp0_stage0_11001 == 1'b0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        wt_mem_1_V_ce0 = 1'b1;
    end else begin
        wt_mem_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond_fu_554_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage0_subdone == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd0 == tmp_57_fu_670_p2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b1 == ap_enable_reg_pp0_iter6) & (ap_block_pp0_stage0_subdone == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0)) | ((1'b1 == ap_enable_reg_pp0_iter0) & (ap_block_pp0_stage0_subdone == 1'b0) & (1'd0 == tmp_57_fu_670_p2) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign best_out_V_1_fu_3553_p3 = ((tmp_reg_3635[0:0] === 1'b1) ? p_Val2_7_reg_454 : best_out_V_fu_3549_p1);

assign best_out_V_2_fu_3560_p3 = ((sel_tmp25_demorgan_reg_4682[0:0] === 1'b1) ? best_out_V_1_fu_3553_p3 : p_Val2_7_reg_454);

assign best_out_V_fu_3549_p1 = $signed(p_Val2_s_63_fu_3540_p4);

assign bvh_d_index_fu_3521_p1 = o_offset_V_reg_3711;

assign d_o_idx_V_read_read_fu_296_p2 = d_o_idx_V;

assign dmem_0_1_V_d0 = o_word_V_3_fu_3573_p3;

assign dmem_1_1_V_d0 = o_word_V_3_fu_3573_p3;

assign exitcond_fu_554_p2 = ((p_s_reg_478 == n_outputs) ? 1'b1 : 1'b0);

assign i_V_fu_719_p2 = (16'd128 + p_5_reg_514);

assign in_wrd_V_0_phi_fu_725_p3 = ((d_i_idx_V[0:0] === 1'b1) ? dmem_1_0_V_q0 : dmem_0_0_V_q0);

assign in_wrd_V_1_phi_fu_994_p3 = ((d_i_idx_V[0:0] === 1'b1) ? dmem_1_1_V_q0 : dmem_0_1_V_q0);

assign kh_off_V_1_fu_3248_p1 = p_s_reg_478[0:0];

assign kh_off_V_fu_3308_p1 = p_s_reg_478[1:0];

assign ki_V_2_fu_3266_p3 = ((kh_off_V_1_fu_3248_p1[0:0] === 1'b1) ? loc_V_8_fu_3256_p4 : loc_V_7_fu_3252_p1);

assign lhs_V_fu_531_p1 = o_index_V;

assign loc_V_10_fu_3406_p4 = {{kh_mem_V_q0[47:32]}};

assign loc_V_11_fu_3416_p4 = {{kh_mem_V_q0[63:48]}};

assign loc_V_7_fu_3252_p1 = kh_mem_V_q0[15:0];

assign loc_V_8_fu_3256_p4 = {{kh_mem_V_q0[47:32]}};

assign loc_V_9_fu_3328_p4 = {{kh_mem_V_q0[31:16]}};

assign loc_V_fu_3318_p1 = kh_mem_V_q0[15:0];

assign nc_V_4_fu_3496_p3 = ((or_cond_fu_3482_p2[0:0] === 1'b1) ? newSel_fu_3474_p3 : newSel1_fu_3488_p3);

assign newSel1_fu_3488_p3 = ((tmp_90_fu_3312_p2[0:0] === 1'b1) ? loc_V_fu_3318_p1 : loc_V_11_fu_3416_p4);

assign newSel_fu_3474_p3 = ((sel_tmp18_fu_3468_p2[0:0] === 1'b1) ? loc_V_10_fu_3406_p4 : loc_V_9_fu_3328_p4);

assign next_mul_fu_549_p2 = (phi_mul_reg_490 + tmp_s_reg_3658);

assign not_s_fu_3504_p2 = (($signed(p_Val2_3_reg_502) < $signed(nc_V_4_fu_3496_p3)) ? 1'b1 : 1'b0);

assign o_V_fu_559_p2 = (p_s_reg_478 + 16'd1);

assign o_offset_V_fu_636_p2 = (tmp_1148_fu_632_p1 + tmp_1147_reg_3648);

assign o_word_V_2_fu_3567_p3 = ((tmp_reg_3635[0:0] === 1'b1) ? p_Result_s_fu_3527_p4 : o_word_V_4_reg_3716);

assign o_word_V_3_fu_3573_p3 = ((sel_tmp25_demorgan_reg_4682[0:0] === 1'b1) ? o_word_V_2_fu_3567_p3 : o_word_V_4_reg_3716);

assign o_word_V_4_fu_662_p3 = ((sel_tmp6_fu_658_p2[0:0] === 1'b1) ? dmem_1_1_V_q0 : sel_tmp5_fu_651_p3);

assign or_cond_fu_3482_p2 = (sel_tmp18_fu_3468_p2 | sel_tmp13_fu_3450_p2);

assign p_0856_s_fu_703_p4 = {{r_V_7_fu_679_p2[21:7]}};

assign p_Repl2_s_fu_3524_p1 = not_s_reg_4677;

assign p_Result_9_fu_610_p3 = {{56'd0}, {p_Val2_s_reg_466}};

always @ (*) begin
    p_Result_s_fu_3527_p4 = o_word_V_4_reg_3716;
    p_Result_s_fu_3527_p4[bvh_d_index_fu_3521_p1] = |(p_Repl2_s_fu_3524_p1);
end

assign p_Val2_2_fu_3384_p2 = ($signed(tmp_104_cast_fu_3380_p1) + $signed(tmp_96_fu_3344_p1));

assign p_Val2_6_fu_3390_p4 = {{p_Val2_2_fu_3384_p2[33:14]}};

assign p_Val2_s_63_fu_3540_p4 = {{p_Val2_2_reg_4672[33:20]}};

assign p_cast_fu_3223_p1 = $signed(tmp_108_fu_3217_p2);

assign phitmp_1_cast_fu_3203_p1 = tmp_189_1_fu_3196_p3;

assign phitmp_cast_fu_3182_p1 = tmp_81_fu_3175_p3;

assign prediction_V_1_fu_3583_p3 = ((tmp_reg_3635[0:0] === 1'b1) ? p_Val2_s_reg_466 : prediction_V_fu_3536_p1);

assign prediction_V_2_fu_3590_p3 = ((sel_tmp25_demorgan_reg_4682[0:0] === 1'b1) ? prediction_V_1_fu_3583_p3 : p_Val2_s_reg_466);

assign prediction_V_fu_3536_p1 = p_s_reg_478[7:0];

assign r_V_10_fu_3233_p4 = {{p_s_reg_478[15:1]}};

assign r_V_1_cast_fu_1361_p1 = r_V_1_fu_1263_p64;

assign r_V_1_fu_1263_p64 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_1150_reg_3767}, {1'd0}}, {tmp_1151_reg_3772}}, {1'd0}}, {tmp_1152_reg_3777}}, {1'd0}}, {tmp_1153_reg_3782}}, {1'd0}}, {tmp_1154_reg_3787}}, {1'd0}}, {tmp_1155_reg_3792}}, {1'd0}}, {tmp_1156_reg_3797}}, {1'd0}}, {tmp_1157_reg_3802}}, {1'd0}}, {tmp_1158_reg_3807}}, {1'd0}}, {tmp_1159_reg_3812}}, {1'd0}}, {tmp_1160_reg_3817}}, {1'd0}}, {tmp_1161_reg_3822}}, {1'd0}}, {tmp_1162_reg_3827}}, {1'd0}}, {tmp_1163_reg_3832}}, {1'd0}}, {tmp_1164_reg_3837}}, {1'd0}}, {tmp_1165_reg_3842}}, {1'd0}}, {tmp_1166_reg_3847}}, {1'd0}}, {tmp_1167_reg_3852}}, {1'd0}}, {tmp_1168_reg_3857}}, {1'd0}}, {tmp_1169_reg_3862}}, {1'd0}}, {tmp_1170_reg_3867}}, {1'd0}}, {tmp_1171_reg_3872}}, {1'd0}}, {tmp_1172_reg_3877}}, {1'd0}}, {tmp_1173_reg_3882}}, {1'd0}}, {tmp_1174_reg_3887}}, {1'd0}}, {tmp_1175_reg_3892}}, {1'd0}}, {tmp_1176_reg_3897}}, {1'd0}}, {tmp_1177_reg_3902}}, {1'd0}}, {tmp_1178_reg_3907}}, {1'd0}}, {tmp_1179_reg_3912}}, {1'd0}}, {tmp_1180_reg_3917}}, {1'd0}}, {tmp_1181_reg_3922}};

assign r_V_2_cast_fu_2155_p1 = r_V_2_fu_2105_p32;

assign r_V_2_fu_2105_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_61_reg_4092}, {2'd0}}, {tmp_62_reg_4097}}, {2'd0}}, {tmp_63_reg_4103}}, {2'd0}}, {tmp_64_reg_4109}}, {2'd0}}, {tmp_65_reg_4115}}, {2'd0}}, {tmp_109_reg_4121}}, {2'd0}}, {tmp_110_reg_4127}}, {2'd0}}, {tmp_111_reg_4133}}, {2'd0}}, {tmp_112_reg_4139}}, {2'd0}}, {tmp_113_reg_4145}}, {2'd0}}, {tmp_114_reg_4151}}, {2'd0}}, {tmp_115_reg_4157}}, {2'd0}}, {tmp_116_reg_4163}}, {2'd0}}, {tmp_117_reg_4169}}, {2'd0}}, {tmp_118_reg_4175}}, {2'd0}}, {tmp_1182_reg_4181}};

assign r_V_3_cast_fu_2209_p1 = r_V_3_fu_2159_p32;

assign r_V_3_fu_2159_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_119_reg_4188}, {2'd0}}, {tmp_120_reg_4193}}, {2'd0}}, {tmp_121_reg_4199}}, {2'd0}}, {tmp_122_reg_4205}}, {2'd0}}, {tmp_123_reg_4211}}, {2'd0}}, {tmp_124_reg_4217}}, {2'd0}}, {tmp_125_reg_4223}}, {2'd0}}, {tmp_126_reg_4229}}, {2'd0}}, {tmp_127_reg_4235}}, {2'd0}}, {tmp_128_reg_4241}}, {2'd0}}, {tmp_129_reg_4247}}, {2'd0}}, {tmp_130_reg_4253}}, {2'd0}}, {tmp_131_reg_4259}}, {2'd0}}, {tmp_132_reg_4265}}, {2'd0}}, {tmp_133_reg_4271}}, {2'd0}}, {tmp_134_reg_4277}};

assign r_V_44_1_cast_fu_1782_p1 = r_V_44_1_fu_1684_p64;

assign r_V_44_1_fu_1684_p64 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_1184_reg_3932}, {1'd0}}, {tmp_1185_reg_3937}}, {1'd0}}, {tmp_1186_reg_3942}}, {1'd0}}, {tmp_1187_reg_3947}}, {1'd0}}, {tmp_1188_reg_3952}}, {1'd0}}, {tmp_1189_reg_3957}}, {1'd0}}, {tmp_1190_reg_3962}}, {1'd0}}, {tmp_1191_reg_3967}}, {1'd0}}, {tmp_1192_reg_3972}}, {1'd0}}, {tmp_1193_reg_3977}}, {1'd0}}, {tmp_1194_reg_3982}}, {1'd0}}, {tmp_1195_reg_3987}}, {1'd0}}, {tmp_1196_reg_3992}}, {1'd0}}, {tmp_1197_reg_3997}}, {1'd0}}, {tmp_1198_reg_4002}}, {1'd0}}, {tmp_1199_reg_4007}}, {1'd0}}, {tmp_1200_reg_4012}}, {1'd0}}, {tmp_1201_reg_4017}}, {1'd0}}, {tmp_1202_reg_4022}}, {1'd0}}, {tmp_1203_reg_4027}}, {1'd0}}, {tmp_1204_reg_4032}}, {1'd0}}, {tmp_1205_reg_4037}}, {1'd0}}, {tmp_1206_reg_4042}}, {1'd0}}, {tmp_1207_reg_4047}}, {1'd0}}, {tmp_1208_reg_4052}}, {1'd0}}, {tmp_1209_reg_4057}}, {1'd0}}, {tmp_1210_reg_4062}}, {1'd0}}, {tmp_1211_reg_4067}}, {1'd0}}, {tmp_1212_reg_4072}}, {1'd0}}, {tmp_1213_reg_4077}}, {1'd0}}, {tmp_1214_reg_4082}}, {1'd0}}, {tmp_1215_reg_4087}};

assign r_V_45_1_cast_fu_2501_p1 = r_V_45_1_fu_2451_p32;

assign r_V_45_1_fu_2451_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_147_reg_4284}, {2'd0}}, {tmp_148_reg_4289}}, {2'd0}}, {tmp_149_reg_4295}}, {2'd0}}, {tmp_150_reg_4301}}, {2'd0}}, {tmp_151_reg_4307}}, {2'd0}}, {tmp_152_reg_4313}}, {2'd0}}, {tmp_153_reg_4319}}, {2'd0}}, {tmp_154_reg_4325}}, {2'd0}}, {tmp_155_reg_4331}}, {2'd0}}, {tmp_156_reg_4337}}, {2'd0}}, {tmp_157_reg_4343}}, {2'd0}}, {tmp_158_reg_4349}}, {2'd0}}, {tmp_159_reg_4355}}, {2'd0}}, {tmp_160_reg_4361}}, {2'd0}}, {tmp_161_reg_4367}}, {2'd0}}, {tmp_1216_reg_4373}};

assign r_V_46_1_cast_fu_2555_p1 = r_V_46_1_fu_2505_p32;

assign r_V_46_1_fu_2505_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{tmp_162_reg_4380}, {2'd0}}, {tmp_163_reg_4385}}, {2'd0}}, {tmp_164_reg_4391}}, {2'd0}}, {tmp_165_reg_4397}}, {2'd0}}, {tmp_166_reg_4403}}, {2'd0}}, {tmp_167_reg_4409}}, {2'd0}}, {tmp_168_reg_4415}}, {2'd0}}, {tmp_169_reg_4421}}, {2'd0}}, {tmp_170_reg_4427}}, {2'd0}}, {tmp_171_reg_4433}}, {2'd0}}, {tmp_172_reg_4439}}, {2'd0}}, {tmp_173_reg_4445}}, {2'd0}}, {tmp_174_reg_4451}}, {2'd0}}, {tmp_175_reg_4457}}, {2'd0}}, {tmp_176_reg_4463}}, {2'd0}}, {tmp_177_reg_4469}};

assign r_V_47_1_cast_fu_3017_p1 = r_V_47_1_fu_2990_p14;

assign r_V_47_1_fu_2990_p14 = {{{{{{{{{{{{{tmp_180_reg_4541}, {4'd0}}, {tmp_181_reg_4547}}, {4'd0}}, {tmp_182_reg_4554}}, {4'd0}}, {tmp_183_reg_4562}}, {4'd0}}, {tmp_184_reg_4570}}, {4'd0}}, {tmp_185_reg_4578}}, {4'd0}}, {tmp_186_reg_4586}};

assign r_V_48_1_cast_fu_3093_p1 = tmp_189_fu_3083_p4;

assign r_V_49_1_fu_1001_p2 = (wt_mem_1_V_q0 ^ in_wrd_V_1_phi_fu_994_p3);

assign r_V_4_cast_fu_2854_p1 = r_V_4_fu_2827_p14;

assign r_V_4_fu_2827_p14 = {{{{{{{{{{{{{tmp_137_reg_4476}, {4'd0}}, {tmp_138_reg_4482}}, {4'd0}}, {tmp_139_reg_4489}}, {4'd0}}, {tmp_140_reg_4497}}, {4'd0}}, {tmp_141_reg_4505}}, {4'd0}}, {tmp_142_reg_4513}}, {4'd0}}, {tmp_143_reg_4521}};

assign r_V_5_cast_fu_2930_p1 = tmp_146_fu_2920_p4;

assign r_V_7_fu_679_p2 = (rhs_V_4_cast_fu_675_p1 + phi_mul_reg_490);

assign r_V_8_fu_3274_p4 = {{p_s_reg_478[15:2]}};

assign r_V_9_fu_685_p4 = {{p_5_reg_514[15:7]}};

assign r_V_fu_574_p2 = (rhs_V_fu_565_p1 + lhs_V_reg_3643);

assign r_V_s_fu_732_p2 = (wt_mem_0_V_q0 ^ in_wrd_V_0_phi_fu_725_p3);

assign rhs_V_4_cast_fu_675_p1 = p_5_reg_514;

assign rhs_V_fu_565_p1 = p_s_reg_478;

assign sel_tmp12_fu_3444_p2 = (tmp_90_fu_3312_p2 ^ 1'd1);

assign sel_tmp13_fu_3450_p2 = (tmp_92_fu_3322_p2 & sel_tmp12_fu_3444_p2);

assign sel_tmp17_demorgan_fu_3456_p2 = (tmp_90_fu_3312_p2 | tmp_92_fu_3322_p2);

assign sel_tmp17_fu_3462_p2 = (sel_tmp17_demorgan_fu_3456_p2 ^ 1'd1);

assign sel_tmp18_fu_3468_p2 = (tmp_93_fu_3338_p2 & sel_tmp17_fu_3462_p2);

assign sel_tmp1_fu_620_p2 = (tmp_1149_reg_3676 & sel_tmp_reg_3653);

assign sel_tmp25_demorgan_fu_3516_p2 = (tmp47_fu_3510_p2 | tmp_reg_3635);

assign sel_tmp2_fu_624_p3 = ((sel_tmp1_fu_620_p2[0:0] === 1'b1) ? dmem_0_1_V_q0 : dmem_0_0_V_q0);

assign sel_tmp3_fu_641_p2 = (tmp_1149_reg_3676 ^ 1'd1);

assign sel_tmp4_fu_646_p2 = (d_o_idx_V & sel_tmp3_fu_641_p2);

assign sel_tmp5_fu_651_p3 = ((sel_tmp4_fu_646_p2[0:0] === 1'b1) ? dmem_1_0_V_q0 : sel_tmp2_reg_3706);

assign sel_tmp6_fu_658_p2 = (tmp_1149_reg_3676 & d_o_idx_V);

assign sel_tmp_fu_539_p2 = (d_o_idx_V ^ 1'd1);

assign sum_V_1_fu_3227_p2 = ($signed(p_cast_fu_3223_p1) + $signed(p_Val2_3_reg_502));

assign tmp41_fu_2439_p2 = (tmp_70_fu_2355_p4 + tmp_1233_cast_fu_2323_p1);

assign tmp44_fu_2785_p2 = (tmp_87_fu_2701_p4 + tmp_1248_cast_fu_2669_p1);

assign tmp47_fu_3510_p2 = (tmp_99_fu_3400_p2 | tmp_102_fu_3438_p2);

assign tmp_100_fu_3149_p1 = ap_reg_pp0_iter4_tmp_88_reg_4601;

assign tmp_101_fu_3430_p3 = {{p_Val2_7_reg_454}, {6'd0}};

assign tmp_102_fu_3438_p2 = (($signed(tmp_107_cast_fu_3426_p1) > $signed(tmp_101_fu_3430_p3)) ? 1'b1 : 1'b0);

assign tmp_103_fu_3152_p3 = {{3'd0}, {ap_reg_pp0_iter4_tmp_186_reg_4586}};

assign tmp_104_cast_fu_3380_p1 = $signed(tmp_97_fu_3372_p3);

assign tmp_106_fu_3159_p2 = (tmp_105_reg_4621 + tmp_104_reg_4616);

assign tmp_107_cast_fu_3426_p1 = $signed(p_Val2_6_fu_3390_p4);

assign tmp_107_fu_3163_p2 = (tmp_103_fu_3152_p3 + tmp_100_fu_3149_p1);

assign tmp_108_fu_3217_p2 = ($signed(tmp_190_cast_fu_3192_p1) + $signed(tmp_190_1_cast_fu_3213_p1));

assign tmp_1147_fu_535_p1 = o_index_V[5:0];

assign tmp_1148_fu_632_p1 = p_s_reg_478[5:0];

assign tmp_1182_fu_1520_p1 = x_V_6_fu_1365_p2[1:0];

assign tmp_1183_fu_2435_p1 = tmp_186_cast_fu_2349_p2[3:0];

assign tmp_1216_fu_1941_p1 = x_V_6_1_fu_1786_p2[1:0];

assign tmp_1217_fu_2781_p1 = tmp_186_1_cast_fu_2695_p2[3:0];

assign tmp_1222_fu_3289_p1 = p_Val2_3_reg_502[9:0];

assign tmp_1233_cast_fu_2323_p1 = tmp_1182_reg_4181;

assign tmp_1234_cast_fu_2326_p1 = tmp_134_reg_4277;

assign tmp_1248_cast_fu_2669_p1 = tmp_1216_reg_4373;

assign tmp_1249_cast_fu_2672_p1 = tmp_177_reg_4469;

assign tmp_135_fu_2311_p2 = (r_V_3_fu_2159_p32 + r_V_2_fu_2105_p32);

assign tmp_136_fu_2329_p4 = {{x_V_fu_2317_p2[62:4]}};

assign tmp_144_fu_2850_p1 = r_V_4_fu_2827_p14;

assign tmp_145_fu_2902_p2 = (tmp_144_fu_2850_p1 + x_V_2_fu_2797_p16);

assign tmp_146_fu_2920_p4 = {{x_V_3_fu_2908_p2[60:16]}};

assign tmp_178_fu_2657_p2 = (r_V_46_1_fu_2505_p32 + r_V_45_1_fu_2451_p32);

assign tmp_179_fu_2675_p4 = {{x_V_1_fu_2663_p2[62:4]}};

assign tmp_186_1_cast_fu_2695_p2 = (tmp_86_fu_2689_p2 + tmp_85_fu_2685_p1);

assign tmp_186_cast_fu_2349_p2 = (tmp_69_fu_2343_p2 + tmp_68_fu_2339_p1);

assign tmp_187_fu_3013_p1 = r_V_47_1_fu_2990_p14;

assign tmp_1883_s_fu_3169_p2 = (tmp_106_fu_3159_p2 + tmp_107_fu_3163_p2);

assign tmp_188_fu_3065_p2 = (tmp_187_fu_3013_p1 + x_V_2_1_fu_2960_p16);

assign tmp_189_1_fu_3196_p3 = {{tmp_1883_s_reg_4631}, {1'd0}};

assign tmp_189_fu_3083_p4 = {{x_V_3_1_fu_3071_p2[60:16]}};

assign tmp_190_1_cast_fu_3213_p1 = $signed(tmp_190_1_fu_3207_p2);

assign tmp_190_1_fu_3207_p2 = (9'd64 - phitmp_1_cast_fu_3203_p1);

assign tmp_190_cast_fu_3192_p1 = $signed(tmp_82_fu_3186_p2);

assign tmp_190_fu_3347_p4 = {{kh_word_V_2_reg_4651[63:48]}};

assign tmp_191_fu_3356_p4 = {{kh_word_V_2_reg_4651[31:16]}};

assign tmp_192_fu_3365_p3 = ((kh_off_V_1_reg_4646[0:0] === 1'b1) ? tmp_190_fu_3347_p4 : tmp_191_fu_3356_p4);

assign tmp_52_fu_605_p2 = ((layer_type_V == 2'd3) ? 1'b1 : 1'b0);

assign tmp_54_fu_569_p2 = (o_index_V + p_s_reg_478);

assign tmp_55_fu_579_p4 = {{r_V_fu_574_p2[16:7]}};

assign tmp_56_fu_589_p1 = tmp_55_fu_579_p4;

assign tmp_57_fu_670_p2 = ((p_5_reg_514 < n_inputs) ? 1'b1 : 1'b0);

assign tmp_59_fu_695_p1 = r_V_9_fu_685_p4;

assign tmp_60_fu_713_p1 = p_0856_s_fu_703_p4;

assign tmp_66_fu_2213_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_62_reg_4097}}}, {2'd0}}}, {tmp_63_reg_4103}}}, {2'd0}}}, {tmp_64_reg_4109}}}, {2'd0}}}, {tmp_65_reg_4115}}}, {2'd0}}}, {tmp_109_reg_4121}}}, {2'd0}}}, {tmp_110_reg_4127}}}, {2'd0}}}, {tmp_111_reg_4133}}}, {2'd0}}}, {tmp_112_reg_4139}}}, {2'd0}}}, {tmp_113_reg_4145}}}, {2'd0}}}, {tmp_114_reg_4151}}}, {2'd0}}}, {tmp_115_reg_4157}}}, {2'd0}}}, {tmp_116_reg_4163}}}, {2'd0}}}, {tmp_117_reg_4169}}}, {2'd0}}}, {tmp_118_reg_4175}}}, {2'd0}}}, {tmp_1182_reg_4181}};

assign tmp_67_fu_2262_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_120_reg_4193}}}, {2'd0}}}, {tmp_121_reg_4199}}}, {2'd0}}}, {tmp_122_reg_4205}}}, {2'd0}}}, {tmp_123_reg_4211}}}, {2'd0}}}, {tmp_124_reg_4217}}}, {2'd0}}}, {tmp_125_reg_4223}}}, {2'd0}}}, {tmp_126_reg_4229}}}, {2'd0}}}, {tmp_127_reg_4235}}}, {2'd0}}}, {tmp_128_reg_4241}}}, {2'd0}}}, {tmp_129_reg_4247}}}, {2'd0}}}, {tmp_130_reg_4253}}}, {2'd0}}}, {tmp_131_reg_4259}}}, {2'd0}}}, {tmp_132_reg_4265}}}, {2'd0}}}, {tmp_133_reg_4271}}}, {2'd0}}}, {tmp_134_reg_4277}};

assign tmp_68_fu_2339_p1 = tmp_136_fu_2329_p4;

assign tmp_69_fu_2343_p2 = (tmp_67_fu_2262_p31 + tmp_66_fu_2213_p31);

assign tmp_70_fu_2355_p4 = {{tmp_135_fu_2311_p2[7:4]}};

assign tmp_71_fu_2445_p2 = (tmp_1234_cast_fu_2326_p1 + tmp41_fu_2439_p2);

assign tmp_72_fu_2858_p13 = {{{{{{{{{{{{{{{{{{{{{{3'd0}, {tmp_139_reg_4489}}}, {4'd0}}}, {tmp_140_reg_4497}}}, {4'd0}}}, {tmp_141_reg_4505}}}, {4'd0}}}, {tmp_142_reg_4513}}}, {4'd0}}}, {tmp_143_reg_4521}}}, {4'd0}}}, {tmp_1183_reg_4530}};

assign tmp_73_fu_2880_p13 = {{{{{{{{{{{{{{{{{{{{{{3'd0}, {tmp_138_reg_4482}}}, {4'd0}}}, {tmp_139_reg_4489}}}, {4'd0}}}, {tmp_140_reg_4497}}}, {4'd0}}}, {tmp_141_reg_4505}}}, {4'd0}}}, {tmp_142_reg_4513}}}, {4'd0}}}, {tmp_143_reg_4521}};

assign tmp_74_fu_3123_p1 = ap_reg_pp0_iter4_tmp_71_reg_4536;

assign tmp_75_fu_3126_p3 = {{3'd0}, {ap_reg_pp0_iter4_tmp_143_reg_4521}};

assign tmp_78_fu_3133_p2 = (tmp_77_reg_4611 + tmp_76_reg_4606);

assign tmp_79_fu_3137_p2 = (tmp_75_fu_3126_p3 + tmp_74_fu_3123_p1);

assign tmp_80_fu_3143_p2 = (tmp_78_fu_3133_p2 + tmp_79_fu_3137_p2);

assign tmp_81_fu_3175_p3 = {{tmp_80_reg_4626}, {1'd0}};

assign tmp_82_fu_3186_p2 = (9'd64 - phitmp_cast_fu_3182_p1);

assign tmp_83_fu_2559_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_148_reg_4289}}}, {2'd0}}}, {tmp_149_reg_4295}}}, {2'd0}}}, {tmp_150_reg_4301}}}, {2'd0}}}, {tmp_151_reg_4307}}}, {2'd0}}}, {tmp_152_reg_4313}}}, {2'd0}}}, {tmp_153_reg_4319}}}, {2'd0}}}, {tmp_154_reg_4325}}}, {2'd0}}}, {tmp_155_reg_4331}}}, {2'd0}}}, {tmp_156_reg_4337}}}, {2'd0}}}, {tmp_157_reg_4343}}}, {2'd0}}}, {tmp_158_reg_4349}}}, {2'd0}}}, {tmp_159_reg_4355}}}, {2'd0}}}, {tmp_160_reg_4361}}}, {2'd0}}}, {tmp_161_reg_4367}}}, {2'd0}}}, {tmp_1216_reg_4373}};

assign tmp_84_fu_2608_p31 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{2'd0}, {tmp_163_reg_4385}}}, {2'd0}}}, {tmp_164_reg_4391}}}, {2'd0}}}, {tmp_165_reg_4397}}}, {2'd0}}}, {tmp_166_reg_4403}}}, {2'd0}}}, {tmp_167_reg_4409}}}, {2'd0}}}, {tmp_168_reg_4415}}}, {2'd0}}}, {tmp_169_reg_4421}}}, {2'd0}}}, {tmp_170_reg_4427}}}, {2'd0}}}, {tmp_171_reg_4433}}}, {2'd0}}}, {tmp_172_reg_4439}}}, {2'd0}}}, {tmp_173_reg_4445}}}, {2'd0}}}, {tmp_174_reg_4451}}}, {2'd0}}}, {tmp_175_reg_4457}}}, {2'd0}}}, {tmp_176_reg_4463}}}, {2'd0}}}, {tmp_177_reg_4469}};

assign tmp_85_fu_2685_p1 = tmp_179_fu_2675_p4;

assign tmp_86_fu_2689_p2 = (tmp_84_fu_2608_p31 + tmp_83_fu_2559_p31);

assign tmp_87_fu_2701_p4 = {{tmp_178_fu_2657_p2[7:4]}};

assign tmp_88_fu_2791_p2 = (tmp_1249_cast_fu_2672_p1 + tmp44_fu_2785_p2);

assign tmp_89_fu_3284_p1 = r_V_8_fu_3274_p4;

assign tmp_90_fu_3312_p2 = ((kh_off_V_fu_3308_p1 == 2'd0) ? 1'b1 : 1'b0);

assign tmp_91_fu_3243_p1 = r_V_10_fu_3233_p4;

assign tmp_92_fu_3322_p2 = ((kh_off_V_fu_3308_p1 == 2'd1) ? 1'b1 : 1'b0);

assign tmp_93_fu_3338_p2 = ((kh_off_V_fu_3308_p1 == 2'd2) ? 1'b1 : 1'b0);

assign tmp_94_fu_3021_p13 = {{{{{{{{{{{{{{{{{{{{{{3'd0}, {tmp_182_reg_4554}}}, {4'd0}}}, {tmp_183_reg_4562}}}, {4'd0}}}, {tmp_184_reg_4570}}}, {4'd0}}}, {tmp_185_reg_4578}}}, {4'd0}}}, {tmp_186_reg_4586}}}, {4'd0}}}, {tmp_1217_reg_4595}};

assign tmp_95_fu_3293_p3 = {{tmp_1222_fu_3289_p1}, {10'd0}};

assign tmp_96_fu_3344_p1 = $unsigned(p_Val2_1_reg_4667);

assign tmp_97_fu_3372_p3 = {{tmp_192_fu_3365_p3}, {12'd0}};

assign tmp_98_fu_3043_p13 = {{{{{{{{{{{{{{{{{{{{{{3'd0}, {tmp_181_reg_4547}}}, {4'd0}}}, {tmp_182_reg_4554}}}, {4'd0}}}, {tmp_183_reg_4562}}}, {4'd0}}}, {tmp_184_reg_4570}}}, {4'd0}}}, {tmp_185_reg_4578}}}, {4'd0}}}, {tmp_186_reg_4586}};

assign tmp_99_fu_3400_p2 = ((p_s_reg_478 == 16'd0) ? 1'b1 : 1'b0);

assign tmp_fu_525_p2 = ((layer_type_V == 2'd2) ? 1'b1 : 1'b0);

assign tmp_s_fu_545_p1 = n_inputs;

assign wt_mem_0_V_address0 = tmp_60_fu_713_p1;

assign wt_mem_1_V_address0 = tmp_60_fu_713_p1;

assign x_V_1_fu_2663_p2 = (r_V_45_1_cast_fu_2501_p1 + r_V_46_1_cast_fu_2555_p1);

assign x_V_2_1_cast_fu_2986_p1 = x_V_2_1_fu_2960_p16;

assign x_V_2_1_fu_2960_p16 = {{{{{{{{{{{{{{{tmp_180_reg_4541}, {4'd0}}, {tmp_181_reg_4547}}, {4'd0}}, {tmp_182_reg_4554}}, {4'd0}}, {tmp_183_reg_4562}}, {4'd0}}, {tmp_184_reg_4570}}, {4'd0}}, {tmp_185_reg_4578}}, {4'd0}}, {tmp_186_reg_4586}}, {4'd0}}, {tmp_1217_reg_4595}};

assign x_V_2_cast_fu_2823_p1 = x_V_2_fu_2797_p16;

assign x_V_2_fu_2797_p16 = {{{{{{{{{{{{{{{tmp_137_reg_4476}, {4'd0}}, {tmp_138_reg_4482}}, {4'd0}}, {tmp_139_reg_4489}}, {4'd0}}, {tmp_140_reg_4497}}, {4'd0}}, {tmp_141_reg_4505}}, {4'd0}}, {tmp_142_reg_4513}}, {4'd0}}, {tmp_143_reg_4521}}, {4'd0}}, {tmp_1183_reg_4530}};

assign x_V_3_1_cast_fu_3077_p2 = (tmp_98_fu_3043_p13 + tmp_94_fu_3021_p13);

assign x_V_3_1_fu_3071_p2 = (x_V_2_1_cast_fu_2986_p1 + r_V_47_1_cast_fu_3017_p1);

assign x_V_3_cast_fu_2914_p2 = (tmp_73_fu_2880_p13 + tmp_72_fu_2858_p13);

assign x_V_3_fu_2908_p2 = (x_V_2_cast_fu_2823_p1 + r_V_4_cast_fu_2854_p1);

assign x_V_4_1_fu_3097_p2 = (x_V_3_1_cast_fu_3077_p2 + r_V_48_1_cast_fu_3093_p1);

assign x_V_4_fu_2934_p2 = (x_V_3_cast_fu_2914_p2 + r_V_5_cast_fu_2930_p1);

assign x_V_6_1_fu_1786_p2 = (r_V_49_1_reg_3927 - r_V_44_1_cast_fu_1782_p1);

assign x_V_6_fu_1365_p2 = (r_V_s_reg_3762 - r_V_1_cast_fu_1361_p1);

assign x_V_fu_2317_p2 = (r_V_2_cast_fu_2155_p1 + r_V_3_cast_fu_2209_p1);

always @ (posedge ap_clk) begin
    lhs_V_reg_3643[16] <= 1'b0;
    tmp_s_reg_3658[21:16] <= 6'b000000;
end

endmodule //a0_bin_dense
